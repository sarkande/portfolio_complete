[
    {
        "title": "{\"fr\":\"Bujinkan-Neko\",\"en\":\"Bujinkan-Neko\"}",
        "description": "{\"fr\":\"Commande de site web pour un club d’arts martiaux à Fréjus. Front en ReactJS, back en PHP REST.\",\"en\":\"Website project for a martial arts club in Fréjus. Front-end in ReactJS, back-end in PHP (REST API).\"}",
        "content": "{\"fr\":\"# Projet Bujinkan-Neko : une solution rapide et efficace pour un club d’arts martiaux\\n\\n## Introduction au projet\\n\\nLe projet **Bujinkan-Neko** a vu le jour dans un contexte particulier : le club de ninjutsu Bujinkan Neko, initialement basé à Fréjus, souhaitait élargir ses horizons et s’installer dans une nouvelle région après avoir ouvert une première antenne à Annecy sous le nom de Bujinkan Kanji. Ayant déjà expérimenté une solution basée sur WordPress, le club a rapidement constaté que ce CMS était trop lourd et lent pour répondre à leurs besoins de flexibilité et de performance. Face à ce constat, une solution plus adaptée et rapide à mettre en œuvre s’est imposée.\\n\\n## Objectifs et contexte technique\\n\\nLe principal objectif du projet était clair : proposer rapidement une solution légère, rapide et évolutive. Compte tenu de l’urgence du développement, la décision a été prise d’opter pour une architecture simple mais efficace, combinant un front-end réactif et moderne avec un backend minimaliste mais robuste. La solution devait être fonctionnelle dans les plus brefs délais tout en permettant une évolution future selon les besoins du club.\\n\\n## Choix technologiques\\n\\nPour répondre à ces impératifs techniques et temporels, le choix s’est naturellement porté sur **ReactJS** pour le frontend, associé à **TypeScript** afin de garantir un code clair, facilement maintenable et évolutif. React offrait la réactivité nécessaire et une excellente expérience utilisateur, notamment pour la navigation rapide et intuitive recherchée par les utilisateurs du site. Du côté du backend, **PHP** a été retenu en raison de sa simplicité d’utilisation pour mettre en place rapidement une **API REST**, assurant la communication fluide entre les deux parties de l'application.\\n\\n## Mise en place et résultats\\n\\nLe développement du site s’est déroulé sur un mois, entre février et mars 2022, permettant une mise en ligne très rapide. Dès son lancement, le nouveau site a montré des performances nettement supérieures à l’ancienne version sous WordPress. Les membres du club ont pu profiter d’un accès rapide à toutes les informations essentielles (horaires, cours, événements), le tout présenté de manière claire et esthétique. Le site a également permis au club de gagner en visibilité et en crédibilité dans sa démarche d'expansion.\\n\\n## Évolution vers une solution plus complète\\n\\nAprès un an d'utilisation, le club a souhaité intégrer un espace membre complexe. Pour préparer cette évolution, une migration vers **Angular** a effectivement été réalisée. Le site du club affilié, Bujinkan Kanji, initialement développé sous PHP et WordPress, avait été entièrement recodé en Angular. Cette migration a permis de mutualiser une base technique commune, tout en conservant certaines spécificités propres à chaque site. Finalement, la décision a été prise d’évoluer vers une solution basée sur **Odoo** afin de faciliter la gestion du contenu par la direction du club et intégrer des fonctionnalités ERP complètes. Cette dernière étape fera l’objet d’un projet détaillé à venir.\\n\\n---\\n\\nDécouvrez directement le résultat en ligne : [Bujinkan-Neko](https://bujinkan-neko.fr/)\",\"en\":\"# Bujinkan-Neko Project: A Fast and Efficient Solution for a Martial Arts Club\\n\\n## Project Introduction\\n\\nThe **Bujinkan-Neko** project emerged from a specific context: the Bujinkan Neko ninjutsu club, initially based in Fréjus, aimed to expand to a new location following the opening of its first branch in Annecy under the name Bujinkan Kanji. Having previously experimented with a WordPress-based solution, the club quickly found this CMS to be overly cumbersome and slow, failing to meet their flexibility and performance needs. Consequently, the need for a more streamlined and quickly deployable solution became clear.\\n\\n## Objectives and Technical Context\\n\\nThe project's main goal was straightforward: deliver a lightweight, fast, and scalable solution rapidly. Given the urgent development timeline, the decision was made to choose a simple yet effective architecture, combining a modern and responsive frontend with a minimalist but robust backend. The solution had to be operational promptly, while also being flexible enough to adapt to future needs.\\n\\n## Technological Choices\\n\\nTo meet these technical and time-sensitive requirements, **ReactJS** was chosen for the frontend, paired with **TypeScript** to ensure clean, easily maintainable, and scalable code. React provided the necessary responsiveness and an excellent user experience, particularly suited for quick and intuitive navigation desired by site users. On the backend, **PHP** was selected due to its simplicity for quickly setting up a **REST API**, enabling smooth communication between the frontend and backend.\\n\\n## Implementation and Results\\n\\nThe website was developed within one month, between February and March 2022, enabling rapid deployment. From its launch, the new website demonstrated significantly improved performance compared to the previous WordPress-based version. Club members gained swift and convenient access to all essential information (schedules, classes, events), presented clearly and attractively. Additionally, the site boosted the club's visibility and credibility during its expansion efforts.\\n\\n## Evolution Toward a More Comprehensive Solution\\n\\nAfter one year of usage, the club decided to implement a more complex member area. To prepare for this evolution, a migration to **Angular** was carried out. The related club site, Bujinkan Kanji, initially developed in PHP and WordPress, had already been entirely rewritten in Angular. This migration enabled sharing a common technical foundation while preserving certain specificities unique to each site. Ultimately, the decision was made to transition to an **Odoo**-based solution, facilitating easy content management by the club's administration and integrating comprehensive ERP features. This final evolution will be further detailed in an upcoming project.\\n\\n---\\n\\nCheck out the live result here: [Bujinkan-Neko](https://bujinkan-neko.fr/)\"}",
        "startDate": "2022-02-01",
        "endDate": "",
        "technologies": ["React", "TypeScript", "PHP", "Angular", "Odoo", "SysAdmin", "Docker"],
        "tags": ["Front", "Back"],
        "category": "Projets récents",
        "thumbnailUrl": "projects/bujinkan-neko/1.jpg",
        "gallery": ["projects/bujinkan-neko/1.jpg"],
        "gitUrl": null,
        "liveUrl": "https://bujinkan-neko.fr/",
        "role": "Développeur Fullstack",
        "active": true,
        "old": false,
        "longDescription": "{\"fr\":\"Désireux d’accroître la visibilité du Bujinkan Kanji à Annecy, j’ai remplacé un site Joomla obsolète par une plateforme React/TypeScript reliée à une API REST PHP, puis intégré Odoo pour un espace membre sécurisé et des outils ERP centralisés.\",\"en\":\"To boost Bujinkan Kanji’s online presence in Annecy, I overhauled an outdated Joomla site into a React/TypeScript front end with a PHP REST API, then integrated Odoo to provide a secure member portal and centralized ERP tools.\"}"
    },
    {
        "title": "{\"fr\":\"Capture trame\",\"en\":\"Capture trame\"}",
        "description": "{\"fr\":\"Lecture et décryptage des paquets réseau du jeu Dofus en C#, avec transmission des données à un serveur Node.js pour affichage via une interface Electron/ReactJS.\",\"en\":\"Reading and decoding Dofus network packets in C#, forwarding data to a Node.js server and displaying it through an Electron/ReactJS interface.\\n\"}",
        "content": "{\"fr\":\"# Projet de décryptage réseau Dofus – Analyse et interface temps réel\\n\\n## Contexte du projet\\n\\nJouant à Dofus depuis plus de dix ans, j’ai toujours été intéressé par la création d’outils autour du jeu, dans l’idée de faciliter mon expérience sans jamais tricher ni automatiser le gameplay. L’un des besoins que j’ai ressentis en jouant en équipe était de savoir rapidement et précisément quelles ressources je possédais, et surtout, de pouvoir partager ces informations avec mes coéquipiers sans passer par des échanges manuels fastidieux.\\n\\n## Objectif technique\\n\\nL’idée centrale du projet était de **lire les trames réseau échangées entre le client Dofus et les serveurs d’Ankama**, puis d’extraire et traiter les informations utiles (inventaire, messages, actions, etc.) pour les envoyer à une interface ReactJS. Le projet a été pensé dès le départ comme un outil temps réel, sans aucune action intrusive ni modification du client de jeu. Il s’agissait purement de **sniffer, décoder, structurer et exposer les données** via une interface web.\\n\\n## Décompilation et analyse des paquets\\n\\nLe jeu étant basé sur **Adobe Flash** et non obfusqué, j’ai pu décompiler le client assez facilement et ainsi comprendre comment les classes étaient structurées. En parallèle, j’ai utilisé **Wireshark** pour analyser les paquets réseau en transit. Grâce à des informations glanées sur des forums spécialisés et beaucoup de tests, j’ai pu identifier les types de données, les formats utilisés (par exemple **Big Endian**, entiers codés sur des tailles variables, etc.) et les règles d’encodage spécifiques.\\n\\n## Implémentation en C# et architecture\\n\\nEn C#, j’ai mis en place un **parseur de trames réseau** qui convertissait les flux binaires entrants en objets manipulables. Pour gérer les particularités du protocole Dofus, notamment les trames fragmentées ou enchaînées, j’ai utilisé une **file d’attente de paquets** et un système de décodeur capable de lire dynamiquement les classes issues du client. Par exemple, si une classe contenait deux `short`, je savais qu’il fallait extraire 4 octets et les convertir correctement. L’objectif était de créer un moteur d’interprétation générique basé sur la structure interne du client.\\n\\nUne fois les données extraites, elles étaient transmises via un **serveur TCP** local à un backend **Node.js**, qui servait de passerelle vers une interface front développée avec **ReactJS + Electron**. Cela me permettait d’avoir une **application de bureau interactive** capable d’afficher en direct les ressources collectées ou les messages reçus en jeu.\\n\\n## Technologies et résultats\\n\\nCe projet m’a permis de travailler sur une architecture complète : **reverse engineering, parsing binaire, communication réseau, backend temps réel, et frontend réactif**. Les principaux outils et technologies utilisés incluent :\\n\\n- **C#** pour le traitement réseau bas niveau et la logique d’analyse  \\n- **Node.js** pour la communication avec le frontend  \\n- **ReactJS & Electron** pour l’interface utilisateur de bureau  \\n- **Wireshark** et des outils de debug réseau pour l’analyse initiale\\n\\nLe développement s’est étalé sur environ deux semaines intenses, avec beaucoup d’allers-retours entre l’analyse, les tests, et l’implémentation. Ce projet m’a permis d’approfondir mes connaissances en protocoles réseau, en manipulation binaire et en conception d’architectures modulaires orientées données.\",\"en\":\"# Dofus Network Decoding Project – Real-Time Analysis and Interface\\n\\n## Project Context\\n\\nHaving played Dofus for over ten years, I’ve always enjoyed creating tools to simplify my gameplay experience—without ever cheating or automating actions. While playing in teams, one recurring challenge was tracking who had which resources. That’s when I had the idea to build a tool that could instantly show me my own inventory and share it with teammates.\\n\\n## Technical Objective\\n\\nThe core idea of the project was to **read the network frames exchanged between the Dofus client and Ankama servers**, then extract and process useful information (inventory, messages, actions, etc.) and send it to a ReactJS interface. From the beginning, the project was designed as a **real-time tool** without interfering with the client itself—purely **sniffing, decoding, structuring, and exposing data** through a web interface.\\n\\n## Decompilation and Packet Analysis\\n\\nSince the game is based on **Adobe Flash** and not obfuscated, I was able to decompile the client relatively easily and understand how classes were structured. In parallel, I used **Wireshark** to monitor live packet traffic. With the help of obscure forum posts and extensive testing, I successfully identified the data types, encoding formats (like **Big Endian**, variable-sized integers, etc.), and specific rules used by the protocol.\\n\\n## C# Implementation and System Architecture\\n\\nUsing C#, I built a **network frame parser** that translated binary streams into structured objects. To handle specific behaviors of the Dofus protocol, such as fragmented or chained packets, I implemented a **packet queue** and a dynamic decoder that matched the structure of the client’s classes. For example, if a class contained two `short`s, I would extract 4 bytes accordingly. The goal was to develop a generic interpreter engine based on the internal structure of the client.\\n\\nOnce data was extracted, it was sent via a **local TCP server** to a **Node.js backend**, which acted as a bridge to a **ReactJS + Electron** front-end interface. This resulted in a **desktop app** capable of displaying real-time data like resource quantities or in-game messages.\\n\\n## Technologies and Outcome\\n\\nThis project allowed me to work on a full-stack architecture involving **reverse engineering, binary parsing, network communication, real-time backend, and reactive front-end**. The main technologies and tools used include:\\n\\n- **C#** for low-level networking and decoding logic  \\n- **Node.js** to connect with the front-end  \\n- **ReactJS & Electron** for the desktop UI  \\n- **Wireshark** and network debugging tools for initial analysis\\n\\nDevelopment spanned about two intense weeks of analysis, testing, and implementation. The project deepened my understanding of network protocols, binary manipulation, and data-oriented system design.\"}",
        "startDate": "2023-06-11",
        "endDate": "2023-06-26",
        "technologies": ["CSharp", "React", "Electron", "Reverse Engineering"],
        "tags": ["Electron", "Personnel"],
        "category": "Projets récents",
        "thumbnailUrl": "projects/captureTrame/1.png",
        "gallery": ["projects/captureTrame/1.png", "projects/captureTrame/2.png", "projects/captureTrame/3.png", "projects/captureTrame/4.png"],
        "gitUrl": null,
        "liveUrl": null,
        "role": "Développeur Fullstack",
        "active": true,
        "old": false,
        "longDescription": "{\"fr\":\"Passionné de Dofus, j’ai conçu un outil de sniff et décodage des trames réseau du client Flash sans modifier le jeu, en C# et Node.js, pour alimenter une interface React/Electron affichant en temps réel inventaire, messages et actions.\",\"en\":\"Passionate about Dofus, I built a network-sniffing and decoding tool for the Adobe Flash client without altering the game, using C# and Node.js to power a React/Electron interface displaying inventory, messages and actions in real time.\"}"
    },
    {
        "title": "{\"fr\":\"BetterOrganizer\",\"en\":\"BetterOrganizer\"}",
        "description": "{\"fr\":\"Refonte du logiciel Organizer de Naio en CSharp, Electron, ReactJS et Node.js.\",\"en\":\"Redesign of Naio’s Organizer software using C#, Electron, ReactJS, and Node.js.\"}",
        "content": "{\"fr\":\"# BetterOrganizer – Gestion multi-fenêtres optimisée pour Dofus\\n\\n## Contexte et motivation\\n\\nToujours dans le cadre du jeu Dofus, il est courant de jouer avec plusieurs comptes en parallèle, chacun dans une fenêtre distincte. Cette pratique permet une approche beaucoup plus stratégique du jeu, notamment lors de phases de farm ou de donjons en équipe. Pour manipuler ces fenêtres efficacement, les solutions existantes à l’époque étaient limitées : soit passer par des raccourcis Windows peu intuitifs, soit utiliser des outils tiers comme **Naio**.\\n\\n## Limites des outils existants\\n\\nBien que Naio soit open source, je n’avais ni le temps ni la certitude nécessaire pour auditer la sécurité de l’ensemble de son code. De plus, son interface utilisateur était datée, rigide, et ne répondait pas à mes attentes en matière d’ergonomie. J’ai donc décidé de **reconcevoir entièrement un outil équivalent**, mais avec une architecture plus moderne, sécurisée et légère.\\n\\n## Architecture du projet\\n\\nLe backend de **BetterOrganizer** repose sur un service **C#** chargé de détecter les processus Dofus ouverts, d’interagir avec leurs fenêtres (positionnement, redimensionnement, focus, etc.), et de les organiser selon les préférences de l’utilisateur. Le frontend, quant à lui, est développé en **ReactJS** et repose sur **NeutralinoJS**, une alternative à Electron bien plus légère. Ce choix était crucial : gérer 4 à 8 fenêtres Dofus implique une consommation mémoire importante (environ 2 Go par instance), et il fallait donc limiter au maximum les ressources du gestionnaire lui-même.\\n\\n## Fonctionnalités et retour utilisateur\\n\\nLe projet a été développé en une semaine, avec un focus sur la rapidité de prise en main et l’efficacité. Plusieurs améliorations ont été apportées par la suite suite aux retours des utilisateurs : configuration des raccourcis clavier, meilleure compatibilité avec différentes versions de Windows, ou encore sauvegarde des dispositions de fenêtres. L’outil est ainsi devenu une alternative légère, ergonomique et fiable à Naio pour les joueurs multi-comptes.\\n\\n## Stack technologique\\n\\n- **C#** pour la détection et la manipulation des processus Windows  \\n- **ReactJS** pour l’interface utilisateur moderne et réactive  \\n- **NeutralinoJS** pour fournir une application desktop ultra-légère  \\n- Utilisation des **APIs Windows** pour la gestion fine des fenêtres\",\"en\":\"# BetterOrganizer – Optimized Multi-Window Management for Dofus\\n\\n## Context and Motivation\\n\\nIn Dofus, it’s common to play multiple accounts simultaneously, each in its own window. This allows for a much more strategic approach to the game, especially during farming sessions or dungeon runs. At the time of the project, window management solutions were limited: either relying on Windows shortcuts (functional but clunky), or using third-party tools like **Naio**.\\n\\n## Limitations of Existing Tools\\n\\nAlthough Naio is open-source, I didn’t have the time or confidence to fully audit its code for potential security issues. Additionally, its user interface was outdated and rigid, which didn’t suit my needs. That’s why I decided to **completely rebuild an equivalent tool** with a modern, secure, and lightweight architecture.\\n\\n## Project Architecture\\n\\nThe backend of **BetterOrganizer** is a **C#** service that detects running Dofus processes, interacts with their windows (positioning, resizing, focus, etc.), and organizes them based on user preferences. The frontend is built with **ReactJS** and uses **NeutralinoJS**, a much lighter alternative to Electron. This choice was key: managing 4 to 8 Dofus windows consumes significant memory (~2GB per instance), so the tool itself had to be extremely lightweight.\\n\\n## Features and User Feedback\\n\\nThe project was developed in about one week, focusing on ease of use and performance. Thanks to player feedback, several enhancements were added later on: customizable hotkeys, better compatibility with various Windows versions, and the ability to save window layouts. The tool quickly became a lightweight, ergonomic, and reliable alternative to Naio for multi-account players.\\n\\n## Tech Stack\\n\\n- **C#** for detecting and controlling Windows processes  \\n- **ReactJS** for a modern and responsive UI  \\n- **NeutralinoJS** to deliver an ultra-lightweight desktop app  \\n- Use of **Windows APIs** for precise window management\"}",
        "startDate": "2023-05-20",
        "endDate": "2023-05-30",
        "technologies": ["React", "NeutralinoJS", "Node.js", "CSharp", "Redux"],
        "tags": ["NeutralinoJS", "Personnel"],
        "category": "Projets récents",
        "thumbnailUrl": "projects/betterOrganizer/1.png",
        "gallery": ["projects/betterOrganizer/1.png", "projects/betterOrganizer/2.png", "projects/betterOrganizer/3.png"],
        "gitUrl": null,
        "liveUrl": null,
        "role": "Développeur Fullstack",
        "active": true,
        "old": false,
        "longDescription": "{\"fr\":\"BetterOrganizer optimise la gestion multi-comptes Dofus en détectant via C# les fenêtres du jeu pour les positionner, redimensionner et focus selon vos préférences. Son interface ReactJS/NeutralinoJS est légère et ergonomique.\",\"en\":\"BetterOrganizer streamlines multi-account play in Dofus by using a C# backend to detect game windows and auto-arrange, resize and focus them per user settings. The ReactJS/NeutralinoJS interface remains lightweight and highly intuitive.\"}"
    },
    {
        "title": "{\"fr\":\"Modale HRNet\",\"en\":\"Modale HRNet\"}",
        "description": "{\"fr\":\"Composant ReactJS de modale publié sur NPM. Projet de fin de formation React.\",\"en\":\"ReactJS modal component published on NPM. Final project for a React training course.\"}",
        "content": "{\"fr\":\"# Modal Component – Publication NPM lors d’un projet de formation ReactJS\\n\\n## Contexte pédagogique\\n\\nDans le cadre de ma formation ReactJS chez OpenClassrooms, visant l’obtention d’un diplôme Bac+3/4, j’ai réalisé plusieurs projets encadrés par un jury professionnel. Chaque projet comportait un cahier des charges précis, imposant des contraintes techniques spécifiques et simulant des cas concrets d’entreprise.\\n\\n## Objectif du projet\\n\\nL’un des projets consistait à développer un **composant React réutilisable**, à publier ensuite sur **NPM** afin qu’il puisse être utilisé par d’autres développeurs. L’objectif pédagogique était double : maîtriser la création de composants modulaires dans React, et comprendre le processus de publication d’un package open source.\\n\\n## Fonctionnalités de la modale\\n\\nJ’ai donc choisi de développer un **composant de fenêtre modale** personnalisable. Celui-ci permet notamment :\\n\\n- D’afficher une fenêtre avec ou sans fond assombri  \\n- De configurer dynamiquement les boutons d’action (valider, annuler, etc.)  \\n- De déclencher des fonctions spécifiques à la fermeture ou à la validation  \\n- D’adapter facilement le style et les contenus via les props React\\n\\nLe composant a été conçu pour être **léger, simple à intégrer**, mais aussi **suffisamment flexible pour répondre à différents cas d’usage** dans des projets React variés.\\n\\n## Technologies et publication\\n\\n- **ReactJS** pour la création du composant  \\n- **SCSS** pour la mise en forme stylisée et maintenable  \\n- Publication sur **NPM** avec une documentation complète\",\"en\":\"# Modal Component – NPM Publication as Part of a ReactJS Training Project\\n\\n## Educational Context\\n\\nAs part of my ReactJS training at OpenClassrooms (Bac+3/4 level), I completed several projects evaluated by a professional jury. Each project came with a detailed specification, including technical constraints and realistic business use cases.\\n\\n## Project Objective\\n\\nOne of the assignments was to create a **reusable React component**, and publish it on **NPM** so it could be used by other developers. The educational goal was twofold: mastering component modularity in React, and understanding the open-source package publishing process.\\n\\n## Modal Features\\n\\nI chose to build a **customizable modal window component**. It includes:\\n\\n- The ability to display with or without a darkened background  \\n- Dynamic configuration of action buttons (e.g., confirm, cancel)  \\n- Execution of custom functions on close or confirm  \\n- Easy styling and content adjustments via React props\\n\\nThe component was designed to be **lightweight, easy to integrate**, and **flexible enough to adapt to various project needs**.\\n\\n## Tech Stack and Publishing\\n\\n- **ReactJS** for building the component  \\n- **SCSS** for clean and maintainable styling  \\n- Published on **NPM** with complete documentation\"}",
        "startDate": "2022-09-01",
        "endDate": "2022-10-01",
        "technologies": ["React", "Redux", "NPM"],
        "tags": ["Component", "NPM", "Formation"],
        "category": "Formation ReactJS",
        "thumbnailUrl": "projects/openclassrooms/projet14-modale/2.png",
        "gallery": ["projects/openclassrooms/projet14-modale/1.png", "projects/openclassrooms/projet14-modale/2.png", "projects/openclassrooms/projet14-modale/3.png"],
        "gitUrl": "https://github.com/sarkande/Projet_14",
        "liveUrl": null,
        "role": "Développeur Frontend",
        "active": true,
        "old": false,
        "longDescription": "{\"fr\":\"Pendant une formation React intensive d’un an pour valider mon Bac+3, j’ai conçu et publié sur NPM un composant modal réutilisable : overlay configurable, boutons d’action dynamiques, callbacks personnalisés et SCSS modulaire, léger et facile à intégrer.\",\"en\":\"During a one-year intensive React course to earn my Bac+3, I designed and published on NPM a reusable modal component featuring configurable overlays, dynamic action buttons, custom open/close callbacks, and modular SCSS for easy integration.\"}"
    },
    {
        "title": "{\"fr\":\"ArgentBank\",\"en\":\"ArgentBank\"}",
        "description": "{\"fr\":\"Application bancaire React avec Redux et gestion d'authentification via API REST.\",\"en\":\"Banking application built with React and Redux, featuring authentication management via REST API.\"}",
        "content": "{\"fr\":\"# Application bancaire React avec Redux – Projet de formation OpenClassrooms\\n\\n## Contexte pédagogique\\n\\nDans le cadre de ma formation ReactJS chez OpenClassrooms (niveau Bac+3/4), j’ai été amené à développer une **application bancaire côté client**, évaluée par un jury. L’objectif était de partir d’une base existante (backend fourni et frontend partiellement développé) pour construire une application complète, conforme à un cahier des charges professionnel.\\n\\n## Objectif du projet\\n\\nLe but principal était de mettre en place **un système d’authentification sécurisé via token JWT**, et d’enrichir le frontend avec des **fonctionnalités connectées à l’API REST**. L’approche pédagogique combinait des compétences en intégration, sécurisation, et gestion d’état global d’une application.\\n\\n## Travaux réalisés\\n\\nAu-delà de l’implémentation du système de **connexion, déconnexion et persistance de session**, j’ai dû :\\n\\n- **Corriger des erreurs dans le backend fourni**, notamment au niveau de la génération des tokens et de la validation des routes protégées  \\n- Mettre en place l’architecture **Redux** pour gérer l’état de l’utilisateur (connexion, données bancaires, etc.)  \\n- Créer des **pages dynamiques** affichant les informations de comptes, historiques, et autres données utilisateurs  \\n- Implémenter des **interactions front-end / API REST existante** en respectant les contraintes métier et techniques spécifiées\\n\\n## Stack technologique\\n\\n- **ReactJS** pour le développement de l’interface utilisateur  \\n- **Redux** pour la gestion d’état centralisée  \\n- **JWT (JSON Web Token)** pour l’authentification sécurisée  \\n- **SCSS** pour la mise en forme  \\n- API REST backend fournie (Node.js/Express)\\n\\nCe projet m’a permis de consolider mes compétences en **intégration d’API sécurisée**, en gestion d’état avec Redux, et en adaptation sur du code existant, tout en respectant des exigences proches du contexte professionnel.\",\"en\":\"# Banking App with React and Redux – OpenClassrooms Training Project\\n\\n## Educational Context\\n\\nAs part of my ReactJS training at OpenClassrooms (Bac+3/4 level), I was tasked with building a **client-side banking application**, evaluated by a professional jury. The goal was to start from a provided backend and partial frontend and develop a complete, production-ready application.\\n\\n## Project Objective\\n\\nThe main goal was to implement a **secure authentication system using JWT tokens**, and enhance the frontend by connecting it to the **existing REST API**. The project focused on integration, security, and global state management within a professional framework.\\n\\n## Work Completed\\n\\nBeyond implementing **login, logout, and session persistence**, I also:\\n\\n- **Fixed issues in the provided backend**, particularly related to token generation and secured route validation  \\n- Set up a **Redux architecture** to manage user state (authentication, banking data, etc.)  \\n- Created **dynamic pages** to display account details, transaction history, and more  \\n- Implemented **frontend/API interactions** based on pre-defined business logic and technical constraints\\n\\n## Tech Stack\\n\\n- **ReactJS** for building the UI  \\n- **Redux** for centralized state management  \\n- **JWT (JSON Web Token)** for secure authentication  \\n- **SCSS** for styling  \\n- Provided REST API backend (Node.js/Express)\\n\\nThis project strengthened my skills in **secure API integration**, **state management with Redux**, and **working with existing codebases**, while meeting real-world constraints.\"}",
        "startDate": "2022-07-01",
        "endDate": "2022-08-01",
        "technologies": ["React", "Redux", "REST"],
        "tags": ["Finance", "Formation"],
        "category": "Formation ReactJS",
        "thumbnailUrl": "projects/openclassrooms/projet13-argentbank/2.png",
        "gallery": ["projects/openclassrooms/projet13-argentbank/1.png", "projects/openclassrooms/projet13-argentbank/2.png", "projects/openclassrooms/projet13-argentbank/3.png"],
        "gitUrl": "https://github.com/sarkande/Projet_13",
        "liveUrl": null,
        "role": "Développeur Frontend",
        "active": true,
        "old": false,
        "longDescription": "{\"fr\":\"Lors d’une formation ReactJS Bac+3/4 chez OpenClassrooms, j’ai développé une application bancaire client intégrant JWT pour l’authentification, corrigé le backend, implémenté Redux pour l’état, et créé des pages dynamiques connectées à une API REST.\",\"en\":\"During my ReactJS Bac+3/4 training at OpenClassrooms, I built a client-side banking app featuring JWT authentication, fixed backend issues, implemented Redux for state management, and developed dynamic pages connected to an existing REST API.\"}"
    },
    {
        "title": "{\"fr\":\"SportSee\",\"en\":\"SportSee\"}",
        "description": "{\"fr\":\"Dashboard sportif animé avec React et D3.js pour visualiser des performances.\",\"en\":\"Animated sports dashboard using React and D3.js to visualize performance data.\"}",
        "content": "{\"fr\":\"# Dashboard sportif – Projet de formation OpenClassrooms avec React et D3.js\\n\\n## Contexte pédagogique\\n\\nCe projet a été réalisé dans le cadre de ma formation ReactJS chez OpenClassrooms (niveau Bac+3/4). L’objectif était de concevoir un **dashboard sportif interactif**, basé sur des données récupérées via une **API**, en utilisant des librairies de visualisation comme **Chart.js** ou **D3.js**.\\n\\n## Objectif du projet\\n\\nL’enjeu principal consistait à **exploiter et représenter graphiquement des données sportives** issues d’une API simulant des performances utilisateur. Les consignes imposaient un affichage clair et dynamique de plusieurs indicateurs : activité quotidienne, sessions moyennes, score de performance globale, répartition des macronutriments, etc.\\n\\n## Choix technologiques\\n\\nPlutôt que d’utiliser Chart.js, j’ai opté pour **D3.js**, une librairie plus puissante mais également plus complexe. Ce choix m’a permis de mieux contrôler l’apparence des visualisations, de créer des animations personnalisées, et de manipuler finement les SVG.\\n\\n## Travaux réalisés\\n\\n- Intégration de l’API et **structuration des données** reçues pour alimenter le dashboard  \\n- Création de **graphiques dynamiques en SVG** avec D3.js : barres, lignes, radar, cercles  \\n- Mise en place d’**animations fluides** : pour le tracé d’une courbe par exemple, j’ai généré une **matrice de points interpolés linéairement** à partir de quelques valeurs clés (x, y) afin de lisser et animer la ligne sur toute la durée représentée  \\n- Répartition du code en **composants React réutilisables** avec gestion des états et des props  \\n- Respect de la **responsivité** et de l’accessibilité visuelle\\n\\n## Stack technologique\\n\\n- **ReactJS** pour le rendu des composants et l’architecture SPA  \\n- **D3.js** pour les visualisations graphiques avancées  \\n- **SCSS** pour la mise en page  \\n- API REST de données sportives simulées\\n\\nCe projet m’a permis d’approfondir mes compétences en **visualisation de données**, en **animation SVG avec D3**, et en conception d’interfaces réactives axées sur l’expérience utilisateur.\",\"en\":\"# Sports Dashboard – OpenClassrooms Training Project with React and D3.js\\n\\n## Educational Context\\n\\nThis project was completed as part of my ReactJS training at OpenClassrooms (Bac+3/4 level). The goal was to build an **interactive sports dashboard** based on data fetched from an **API**, using visualization libraries like **Chart.js** or **D3.js**.\\n\\n## Project Objective\\n\\nThe main challenge was to **visualize and display user performance data** from a simulated API. The dashboard had to dynamically show various metrics: daily activity, average sessions, global performance score, and macronutrient breakdown.\\n\\n## Technology Choices\\n\\nInstead of using Chart.js, I chose **D3.js**, a more powerful but also more complex library. This gave me finer control over visuals, allowed for custom animations, and enabled direct SVG manipulation.\\n\\n## Work Completed\\n\\n- Integrated the API and **structured the incoming data** to power the dashboard  \\n- Created **dynamic SVG charts** with D3.js: bar, line, radar, circular graphs  \\n- Implemented **smooth animations**: for example, when drawing a curve, I used **linear interpolation** to generate an extended matrix of points from just a few (x, y) values, allowing for a smooth and elegant animation  \\n- Built **modular React components** with managed props and state  \\n- Ensured full **responsiveness** and visual accessibility\\n\\n## Tech Stack\\n\\n- **ReactJS** for rendering and SPA structure  \\n- **D3.js** for advanced data visualization  \\n- **SCSS** for layout styling  \\n- Simulated performance **REST API**\\n\\nThis project helped me deepen my skills in **data visualization**, **SVG animation with D3**, and **building responsive, user-focused interfaces**.\"}",
        "startDate": "2022-06-01",
        "endDate": "2022-07-01",
        "technologies": ["React", "D3JS", "REST"],
        "tags": ["Graphique", "Sport", "Formation"],
        "category": "Formation ReactJS",
        "thumbnailUrl": "projects/openclassrooms/projet12-sportsee/2.png",
        "gallery": ["projects/openclassrooms/projet12-sportsee/1.png", "projects/openclassrooms/projet12-sportsee/2.png", "projects/openclassrooms/projet12-sportsee/3.png"],
        "gitUrl": "https://github.com/sarkande/Projet_12",
        "liveUrl": null,
        "role": "Développeur Frontend",
        "active": true,
        "old": false,
        "longDescription": "{\"fr\":\"Durant ma formation ReactJS (Bac+3/4), création d’un dashboard sportif interactif : intégration d’une API, traitement des données pour React et réalisation de graphiques SVG animés avec D3.js pour une interface responsive et modulaire.\",\"en\":\"During my one-year ReactJS training (Bac+3/4), I crafted an interactive sports dashboard: integrated an API, processed data for React, and built animated SVG charts with D3.js for a responsive, modular interface leveraging reusable React components and best practices.\"}"
    },
    {
        "title": "{\"fr\":\"Kasa\",\"en\":\"Kasa\"}",
        "description": "{\"fr\":\"Application de location immobilière avec ReactJS consommant une API REST.\",\"en\":\"Real estate rental application built with ReactJS, consuming a REST API.\"}",
        "content": "{\"fr\":\"# Kasa – Application de location immobilière avec ReactJS\\n\\n## Contexte pédagogique\\n\\nCe projet a été réalisé dans le cadre de ma formation ReactJS chez OpenClassrooms (niveau Bac+3/4). L’objectif était de développer une **application de location immobilière** en Single Page Application (SPA), en consommant une **API REST simulée**, avec une attention particulière portée à l’expérience utilisateur et à la responsivité.\\n\\n## Objectif du projet\\n\\nL’application devait permettre d’afficher une liste d’annonces immobilières, avec navigation entre les pages sans rechargement, et une interface claire, moderne et intuitive. Chaque logement devait présenter une fiche détaillée, regroupant les informations essentielles pour un locataire potentiel.\\n\\n## Fonctionnalités principales\\n\\n- Affichage des logements depuis une API REST locale (mock)  \\n- **Carousel d’images** interactif pour chaque logement  \\n- **Système de tags** pour les caractéristiques (mer, montagne, wifi, etc.)  \\n- Sections **description et équipements** en **accordéons déroulants**  \\n- Gestion des **routes avec React Router** et affichage conditionnel en cas d’erreur 404  \\n- Conception **responsive** pour une navigation fluide sur mobile et desktop\\n\\n## Stack technologique\\n\\n- **ReactJS** pour la structure de l’application SPA  \\n- **React Router** pour la navigation entre pages  \\n- **SCSS** pour le style modulaire  \\n- API simulée (fichiers JSON)\\n\\nCe projet m’a permis de mettre en pratique les bases d’une **architecture React** propre, d’améliorer ma **gestion d’état locale**, et de renforcer mes compétences en **intégration UI moderne et responsive**.\",\"en\":\"# Kasa – Real Estate Rental App with ReactJS\\n\\n## Educational Context\\n\\nThis project was completed as part of my ReactJS training at OpenClassrooms (Bac+3/4 level). The goal was to develop a **real estate rental web application** as a Single Page Application (SPA), consuming a **mocked REST API**, with a strong focus on user experience and responsive design.\\n\\n## Project Objective\\n\\nThe application was designed to display a list of rental listings with smooth navigation between pages, and a clean, modern interface. Each property had a detailed listing page containing all the key information for potential tenants.\\n\\n## Key Features\\n\\n- Display of properties from a local mocked REST API  \\n- Interactive **image carousel** on each property page  \\n- **Tag system** to highlight features (sea view, mountain, Wi-Fi, etc.)  \\n- **Accordion dropdowns** for description and equipment sections  \\n- **Routing handled with React Router**, including 404 error page  \\n- Fully **responsive design** for both desktop and mobile\\n\\n## Tech Stack\\n\\n- **ReactJS** to structure the SPA  \\n- **React Router** for page navigation  \\n- **SCSS** for modular styling  \\n- Mocked API (JSON files)\\n\\nThis project allowed me to practice building a clean **React architecture**, improve **local state management**, and strengthen my skills in **modern and responsive UI integration**.\"}",
        "startDate": "2022-05-01",
        "endDate": "2022-06-01",
        "technologies": ["React", "REST"],
        "tags": ["Immobilier", "Formation"],
        "category": "Formation ReactJS",
        "thumbnailUrl": "projects/openclassrooms/projet11-kasa/2.png",
        "gallery": ["projects/openclassrooms/projet11-kasa/1.png", "projects/openclassrooms/projet11-kasa/2.png", "projects/openclassrooms/projet11-kasa/3.png"],
        "gitUrl": "https://github.com/sarkande/Projet_11",
        "liveUrl": null,
        "role": "Développeur Frontend",
        "active": true,
        "old": false,
        "longDescription": "{\"fr\":\"Lors de ma formation ReactJS Bac+3/4 chez OpenClassrooms, j’ai développé Kasa, une SPA de location : intégration d’une API mock, carousel d’images, tags, accordéons, routes React Router et design responsive pour une UX fluide.\",\"en\":\"During my OpenClassrooms ReactJS Bac+3/4 training, I built Kasa, a rental SPA: mock API integration, image carousel, tags, accordion sections, React Router routing with 404 handling, and responsive design for seamless user experience.\"}"
    },
    {
        "title": "{\"fr\":\"Learn@school (maquettage)\",\"en\":\"Learn@school (maquettage)\"}",
        "description": "{\"fr\":\"Création de maquettes Figma adaptatives pour une association d'aide scolaire.\",\"en\":\"Design of responsive Figma mockups for a tutoring support association.\"}",
        "content": "{\"fr\":\"# Learn@School – Maquettes Figma adaptatives pour une association éducative\\n\\n## Contexte pédagogique\\n\\nCe projet a été réalisé dans le cadre de ma formation ReactJS chez OpenClassrooms (niveau Bac+3/4), en tant que **complément UI/UX** à la réalisation de sites web. Il visait à développer mes compétences de conception en amont du développement, pour être capable de créer des **interfaces réfléchies, accessibles et bien structurées**, avant même de passer au code.\\n\\n## Objectif du projet\\n\\nL’objectif était de concevoir une **interface simple, engageante et accessible**, adaptée à différents supports (ordinateur, tablette, mobile), pour offrir une navigation fluide et une expérience cohérente. Le projet était destiné à une **association d’aide scolaire**, afin de mettre en relation des **professeurs bénévoles (mentors)** avec des **élèves** en difficulté.\\n\\n## Travaux réalisés\\n\\n- Analyse des besoins utilisateurs et définition de **personas** (élèves, mentors, coordinateurs)  \\n- Création de **parcours utilisateurs détaillés** pour illustrer les cas d’usage clés  \\n- Conception d’un **parcours utilisateur clair et intuitif** (connexion, recherche de mentor, prise de rendez-vous)  \\n- Réalisation de **maquettes haute fidélité avec Figma** en adaptant l’UI aux différentes résolutions (desktop, tablette, mobile)  \\n- Définition d’une **charte graphique** sobre et bienveillante, accessible à un public jeune\\n\\n## Livrables et technologies\\n\\n- **Maquettes Figma** responsives non cliquables  \\n- Système de **composants UI réutilisables**  \\n- **Personas et parcours utilisateurs documentés**\\n\\nCe projet m’a permis de renforcer mes compétences en **design d’interface utilisateur**, en **adaptation multi-écran**, et en **conception centrée utilisateur**, en complément direct du développement React.\",\"en\":\"# Learn@School – Responsive Figma Mockups for an Educational Nonprofit\\n\\n## Educational Context\\n\\nThis project was part of my ReactJS training at OpenClassrooms (Bac+3/4 level), designed as a **UI/UX complement** to web development. It aimed to build my ability to design **thoughtful, accessible, and well-structured interfaces** before writing a single line of code.\\n\\n## Project Objective\\n\\nThe goal was to create a **simple, engaging, and accessible interface** across desktop, tablet, and mobile devices. The platform was intended for an **educational nonprofit** to connect **volunteer mentors** with **students** in academic need.\\n\\n## Work Completed\\n\\n- Conducted user research and created **personas** (students, mentors, coordinators)  \\n- Designed **detailed user journeys** illustrating key use cases  \\n- Built a **clear and intuitive user flow** (login, search mentor, schedule session)  \\n- Created **high-fidelity mockups in Figma**, adapted for multiple screen sizes  \\n- Developed a **clean, friendly visual identity** suited for a young audience\\n\\n## Deliverables and Tools\\n\\n- **Non-clickable responsive Figma mockups**  \\n- Reusable **UI component system**  \\n- Documented **personas and user journeys**\\n\\nThis project helped me strengthen my skills in **UI design**, **multi-device layout planning**, and **user-centered design**, directly supporting my React development practice.\"}",
        "startDate": "2022-04-01",
        "endDate": "2022-04-30",
        "technologies": ["UI/UX", "Figma"],
        "tags": ["Design", "Formation"],
        "category": "Formation ReactJS",
        "thumbnailUrl": "projects/openclassrooms/projet10-maquettage/3.png",
        "gallery": ["projects/openclassrooms/projet10-maquettage/1.png", "projects/openclassrooms/projet10-maquettage/2.png", "projects/openclassrooms/projet10-maquettage/3.png", "projects/openclassrooms/projet10-maquettage/4.png"],
        "gitUrl": "https://github.com/sarkande/Projet_13",
        "liveUrl": null,
        "role": "UX Designer",
        "active": true,
        "old": false,
        "longDescription": "{\"fr\":\"Lors de ma formation ReactJS Bac+3/4, j’ai créé pour une association éducative des maquettes Figma adaptatives : personas, parcours utilisateurs, UI responsive (desktop/tablette/mobile) et charte graphique sobre, accessible et modulable.\",\"en\":\"During my ReactJS Bac+3/4 training, I produced adaptive Figma mockups for an educational nonprofit: user personas, journey flows, responsive UI (desktop/tablet/mobile), and a clean, accessible, and modular design system.\"}"
    },
    {
        "title": "{\"fr\":\"Billed app\",\"en\":\"Billed app\"}",
        "description": "{\"fr\":\"Gestion de frais professionnels avec sécurité des tokens et Redux.\",\"en\":\"Expense management system with token security and Redux integration.\"}",
        "content": "{\"fr\":\"# Billed App – Gestion de frais professionnels et tests unitaires\\n\\n## Contexte pédagogique\\n\\nCe projet a été réalisé dans le cadre de ma formation ReactJS chez OpenClassrooms (niveau Bac+3/4). Il portait sur une application de **gestion de frais professionnels** et avait pour objectif de renforcer mes compétences en **débogage, sécurisation, structuration de code et couverture de tests**.\\n\\n## Objectif du projet\\n\\nL’application existait partiellement et présentait plusieurs dysfonctionnements. Mon rôle était de :\\n\\n- **Corriger les fonctionnalités existantes** (affichage des notes de frais, formulaire, navigation)  \\n- **Ajouter des fonctionnalités manquantes** (connexion sécurisée, affichage dynamique)  \\n- **Mettre en place un système d’authentification par token (JWT)**  \\n- **Structurer le code en respectant les design patterns**  \\n- **Réaliser une couverture de test complète** à l’aide de **Jest**\\n\\n## Travaux réalisés\\n\\n- Débogage de l’application et correction des erreurs fonctionnelles  \\n- Mise en place de la gestion de session via **tokens sécurisés**  \\n- Intégration de **Redux** pour gérer l’état global (connexion, affichage des frais)  \\n- Structuration du code selon les **principes de conception solide et maintenable**  \\n- Écriture de **tests unitaires** avec Jest pour couvrir l’ensemble des cas métier\\n\\n## Stack technologique\\n\\n- **ReactJS** pour l’interface SPA  \\n- **Redux** pour la gestion d’état centralisée  \\n- **Jest** pour les tests unitaires  \\n- **SCSS** pour la mise en forme  \\n- Backend **Node.js fourni**\\n\\nCe projet m’a permis de monter en compétence sur la **qualité logicielle**, la **sécurisation d’application React**, la **structuration du code avec des design patterns**, et la mise en place de **tests robustes** dans un contexte professionnel.\",\"en\":\"# Billed App – Expense Management and Unit Testing\\n\\n## Educational Context\\n\\nThis project was part of my ReactJS training at OpenClassrooms (Bac+3/4 level). It focused on an **expense management application**, with the goal of improving my skills in **debugging, securing, code structuring, and test coverage**.\\n\\n## Project Objective\\n\\nThe application was partially functional and included several issues. My tasks included:\\n\\n- **Fixing existing features** (expense display, form handling, navigation)  \\n- **Adding missing features** (secure login, dynamic rendering)  \\n- **Implementing token-based authentication (JWT)**  \\n- **Refactoring code using clean design patterns**  \\n- **Achieving full test coverage** using **Jest**\\n\\n## Work Completed\\n\\n- Debugged and fixed functional errors in the application  \\n- Implemented session management with **secure tokens**  \\n- Integrated **Redux** to handle global state (auth, expenses)  \\n- Restructured the codebase following **maintainable design principles**  \\n- Wrote **unit tests** with Jest to cover all business logic\\n\\n## Tech Stack\\n\\n- **ReactJS** for the SPA interface  \\n- **Redux** for centralized state management  \\n- **Jest** for unit testing  \\n- **SCSS** for styling  \\n- Provided **Node.js backend**\\n\\nThis project helped me strengthen my skills in **software quality**, **React app security**, **clean code architecture with design patterns**, and building **robust unit tests** in a professional context.\"}",
        "startDate": "2022-03-01",
        "endDate": "2022-03-31",
        "technologies": ["JavaScript", "Jest"],
        "tags": ["Tests", "Formation"],
        "category": "Formation ReactJS",
        "thumbnailUrl": "projects/openclassrooms/projet9-Billed/2.png",
        "gallery": ["projects/openclassrooms/projet9-Billed/1.png", "projects/openclassrooms/projet9-Billed/2.png", "projects/openclassrooms/projet9-Billed/3.png", "projects/openclassrooms/projet9-Billed/4.png"],
        "gitUrl": "https://github.com/sarkande/Billed-app-FR-Front",
        "liveUrl": null,
        "role": "Développeur Frontend",
        "active": true,
        "old": false,
        "longDescription": "{\"fr\":\"Lors de ma formation ReactJS Bac+3/4 chez OpenClassrooms, j’ai débogué et enrichi une appli de gestion de frais pro : correction des fonctionnalités, authentification JWT, état global via Redux, code structuré et tests unitaires Jest pour une couverture complète.\",\"en\":\"During my ReactJS Bac+3/4 training at OpenClassrooms, I debugged and enhanced a professional expenses app: fixed features, implemented JWT authentication, managed global state with Redux, structured code with design patterns, and wrote comprehensive Jest unit tests.\"}"
    },
    {
        "title": "{\"fr\":\"Les petits plats\",\"en\":\"Les petits plats\"}",
        "description": "{\"fr\":\"Application de recherche de recettes basée sur des filtres avancés. Réalisée en JS natif.\",\"en\":\"Recipe search application based on advanced filters. Built with vanilla JavaScript.\"}",
        "content": "{\"fr\":\"# Les Petits Plats – Application de recherche de recettes en JavaScript natif\\n\\n## Contexte pédagogique\\n\\nCe projet a été réalisé dans le cadre de ma formation chez OpenClassrooms (niveau Bac+3/4). Il s’agissait de développer une **application de recherche de recettes** en **JavaScript natif**, en mettant l’accent sur la **logique algorithmique** et la **manipulation dynamique du DOM**.\\n\\n## Objectif du projet\\n\\nL’objectif principal était de proposer une interface simple permettant à un utilisateur de rechercher une recette en fonction de plusieurs critères comme :\\n\\n- Les **ingrédients disponibles**  \\n- Les **ustensiles à disposition**  \\n- Les **appareils de cuisson**\\n\\nL’interface devait permettre de **croiser ces filtres** à l’aide d’un système de **tags dynamiques**, afin d’afficher uniquement les recettes correspondant précisément aux choix effectués.\\n\\n## Travaux réalisés\\n\\n- Création d’un moteur de recherche multi-critères performant  \\n- Développement d’un **système de tags filtrants** (ajout/suppression, mise à jour dynamique des résultats)  \\n- Affichage dynamique des recettes filtrées avec leurs **ingrédients, étapes et descriptions**  \\n- Structuration du projet selon le modèle **MVC simplifié** pour une meilleure lisibilité  \\n- Travail spécifique sur **l’optimisation de la recherche** (pré-traitement des données, normalisation des champs)\\n\\n## Stack technologique\\n\\n- **HTML / SCSS** pour la structure et le style  \\n- **JavaScript natif (ES6)** pour l’ensemble de la logique  \\n- Aucune librairie externe ni framework, pour favoriser la compréhension fine du fonctionnement du JS pur\\n\\nCe projet m’a permis de progresser sur la **gestion des filtres dynamiques**, la **logique algorithmique**, et la **structuration propre du code**, tout en assurant une **expérience utilisateur fluide** sans framework.\",\"en\":\"# Les Petits Plats – Recipe Search App in Vanilla JavaScript\\n\\n## Educational Context\\n\\nThis project was completed as part of my training at OpenClassrooms (Bac+3/4 level). The goal was to develop a **recipe search application** using **vanilla JavaScript**, with a strong focus on **algorithmic logic** and **dynamic DOM manipulation**.\\n\\n## Project Objective\\n\\nThe main objective was to provide a simple interface that allows users to search for recipes based on various filters:\\n\\n- **Available ingredients**  \\n- **Kitchen utensils**  \\n- **Appliances**\\n\\nThe UI had to support **cross-filtering** through a **dynamic tag system**, displaying only recipes that matched the selected criteria.\\n\\n## Work Completed\\n\\n- Built a performant multi-criteria search engine  \\n- Developed a **filtering tag system** (add/remove tags, dynamic results update)  \\n- Displayed filtered recipes with **ingredients, steps, and descriptions**  \\n- Structured the app following a **simplified MVC model** for code clarity  \\n- Focused on **search optimization** (data preprocessing, field normalization)\\n\\n## Tech Stack\\n\\n- **HTML / SCSS** for structure and styling  \\n- **Vanilla JavaScript (ES6)** for all logic  \\n- No external libraries or frameworks to reinforce deep understanding of native JS\\n\\nThis project helped me strengthen my skills in **dynamic filtering**, **algorithmic thinking**, and **clean project architecture**, while delivering a **fluid user experience** without relying on frameworks.\"}",
        "startDate": "2022-02-01",
        "endDate": "2022-02-28",
        "technologies": ["JavaScript", "REST", "NPM"],
        "tags": ["Recettes", "Recherche", "Formation"],
        "category": "Formation ReactJS",
        "thumbnailUrl": "projects/openclassrooms/projet7-lespetitsplats/1.png",
        "gallery": ["projects/openclassrooms/projet7-lespetitsplats/1.png", "projects/openclassrooms/projet7-lespetitsplats/2.png", "projects/openclassrooms/projet7-lespetitsplats/3.png", "projects/openclassrooms/projet7-lespetitsplats/4.png"],
        "gitUrl": "https://github.com/sarkande/projet07",
        "liveUrl": null,
        "role": "Développeur Frontend",
        "active": true,
        "old": false,
        "longDescription": "{\"fr\":\"Lors de ma formation Bac+3/4 chez OpenClassrooms, j’ai développé Les Petits Plats, une application JavaScript natif MVC offrant un moteur de recherche multi-critères avec tags dynamiques et manipulation DOM pour afficher ingrédients, étapes et descriptions sans framework.\",\"en\":\"During my Bac+3/4 OpenClassrooms training, I built Les Petits Plats, a native JS MVC app featuring a multi-criteria search engine with dynamic tag filters and DOM manipulation to display ingredients, steps, and descriptions without using any framework.\"}"
    },
    {
        "title": "{\"fr\":\"FishEye\",\"en\":\"FishEye\"}",
        "description": "{\"fr\":\"Site de promotion pour artistes photographes, axé sur l'accessibilité.\",\"en\":\"Promotional website for photography artists, focused on accessibility.\"}",
        "content": "{\"fr\":\"# Fisheye – Site de promotion photographique axé sur l’accessibilité\\n\\n## Contexte pédagogique\\n\\nCe projet a été mené dans le cadre de ma formation ReactJS chez OpenClassrooms (niveau Bac+3/4). Il consistait à créer une **plateforme de promotion pour photographes professionnels**, avec un focus central sur l’**accessibilité numérique**. Contrairement à d’autres projets orientés performance ou design, celui-ci visait à garantir **une navigation inclusive pour tous les utilisateurs**, y compris les personnes en situation de handicap visuel.\\n\\n## Objectif du projet\\n\\nL’objectif était de proposer un site entièrement **navigable au clavier et par lecteur d’écran**, en respectant les normes d’accessibilité établies. Le travail portait sur :\\n\\n- La mise en place des attributs **ARIA** adaptés à chaque composant  \\n- La gestion précise des **focus, tabulations et raccourcis clavier**  \\n- Le respect des recommandations issues d’outils comme **axe DevTools** et **WAVE**\\n\\nLe site devait ensuite être testé avec un **lecteur d’écran comme NVDA ou VoiceOver**, afin de valider la bonne perception du contenu par un utilisateur non voyant.\\n\\n## Fonctionnalités principales\\n\\n- Présentation d’une **galerie de photographes** et de leurs travaux  \\n- Possibilité d’**aimer des photos** (système de likes)  \\n- Navigation via **menu accessible et clavier uniquement**  \\n- Architecture modulaire avec gestion dynamique des contenus (JS natif)\\n\\n## Travaux réalisés\\n\\n- Structuration du HTML avec des rôles sémantiques appropriés  \\n- Implémentation des **attributs ARIA** pour faciliter la lecture d’écran  \\n- Création d’une **navigation clavier intuitive** (tabindex, aria-labels)  \\n- Vérification de la conformité avec **axe DevTools** et **WAVE**  \\n- Tests manuels avec **lecteurs d’écran** pour garantir une bonne accessibilité\\n\\n## Stack technologique\\n\\n- **HTML / SCSS** pour la structure et le style  \\n- **JavaScript natif (ES6)** pour la logique de navigation et d’interaction  \\n- Accessibilité testée avec **NVDA** / **VoiceOver** et outils comme **WAVE** / **axe DevTools**\\n\\nCe projet m’a permis d’intégrer les bonnes pratiques de **développement accessible**, en allant au-delà de la conformité technique, pour réellement **optimiser l’expérience de navigation des utilisateurs en situation de handicap visuel**.\",\"en\":\"# Fisheye – Photography Showcase Website Focused on Accessibility\\n\\n## Educational Context\\n\\nThis project was part of my ReactJS training at OpenClassrooms (Bac+3/4 level). The goal was to create a **promotional platform for professional photographers** with a strong emphasis on **web accessibility**. Unlike other projects focused on performance or aesthetics, this one was centered around building an **inclusive experience** for all users, including the visually impaired.\\n\\n## Project Objective\\n\\nThe aim was to build a fully **keyboard-navigable and screen reader-compatible** website, complying with established accessibility standards:\\n\\n- Proper use of **ARIA attributes** for all components  \\n- Precise management of **focus, tab navigation, and keyboard shortcuts**  \\n- Conformance checks with tools like **axe DevTools** and **WAVE**\\n\\nThe final result was tested using **screen readers** such as **NVDA** or **VoiceOver**, to ensure blind users could navigate the interface smoothly.\\n\\n## Key Features\\n\\n- Display of a **gallery of photographers** and their works  \\n- Ability to **like photos**  \\n- **Keyboard-only accessible menu navigation**  \\n- Modular architecture using **vanilla JavaScript**\\n\\n## Work Completed\\n\\n- Structured HTML with semantic roles  \\n- Implemented **ARIA attributes** for screen reader support  \\n- Designed an intuitive **keyboard navigation system** (tabindex, aria-labels)  \\n- Verified accessibility using **axe DevTools** and **WAVE**  \\n- Manually tested with **screen readers** for real-world validation\\n\\n## Tech Stack\\n\\n- **HTML / SCSS** for layout and design  \\n- **Vanilla JavaScript (ES6)** for logic and interactivity  \\n- Accessibility tested with **NVDA**, **VoiceOver**, **WAVE**, and **axe DevTools**\\n\\nThis project strengthened my understanding of **accessible development practices**, not just for compliance, but to genuinely **enhance the web experience for visually impaired users**.\"}",
        "startDate": "2022-01-01",
        "endDate": "2022-01-31",
        "technologies": ["JavaScript", "Accessibility"],
        "tags": ["Accessibilité", "Photographie"],
        "category": "Formation ReactJS",
        "thumbnailUrl": "projects/openclassrooms/projet6-fisheye/1.png",
        "gallery": ["projects/openclassrooms/projet6-fisheye/1.png", "projects/openclassrooms/projet6-fisheye/2.png"],
        "gitUrl": "https://github.com/sarkande/Front-End-Fisheye",
        "liveUrl": null,
        "role": "Développeur Frontend",
        "active": true,
        "old": false,
        "longDescription": "{\"fr\":\"Lors de ma formation ReactJS Bac+3/4, j’ai conçu Fisheye, un site de promotion pour photographes axé accessibilité : galerie modulable, likes, navigation clavier/lecteur d’écran optimisée, responsive, via ARIA et tests NVDA/WAVE.\",\"en\":\"During my ReactJS Bac+3/4 training, I built Fisheye, an accessible photography showcase site: modular gallery, like feature, keyboard/screen-reader navigation optimized with ARIA attributes and tested with NVDA/WAVE for inclusive UX.\"}"
    },
    {
        "title": "{\"fr\":\"GameOn\",\"en\":\"GameOn\"}",
        "description": "{\"fr\":\"Validation de formulaires complexes via des regex sur un site de gaming.\",\"en\":\"Validation of complex forms using regex on a gaming website.\"}",
        "content": "{\"fr\":\"# GameON – Validation avancée de formulaires via JavaScript natif\\n\\n## Contexte pédagogique\\n\\nCe projet a été réalisé dans le cadre de ma formation ReactJS chez OpenClassrooms (niveau Bac+3/4). L’objectif principal était de travailler sur la **validation de formulaires complexes** en JavaScript natif, dans un contexte de site de **gaming événementiel**.\\n\\n## Objectif du projet\\n\\nLe site était déjà entièrement conçu sur le plan visuel, à l’exception du **formulaire d’inscription à un événement**. Mon rôle était de :\\n\\n- **Implémenter un système complet de validation en JavaScript**\\n- Utiliser des **regex spécifiques** pour chaque champ (email, téléphone, âge, etc.)\\n- Afficher dynamiquement des **messages d’erreurs contextualisés**  \\n- Rendre certains **inputs ou options conditionnels** en fonction des réponses fournies\\n\\n## Travaux réalisés\\n\\n- Développement d’un système de validation personnalisée pour chaque champ du formulaire  \\n- Mise en place de **regex précises** pour assurer la qualité des données saisies (conformité RGPD et logique métier)  \\n- Gestion de la **logique conditionnelle** (par exemple, afficher ou masquer certains champs selon les réponses)  \\n- Vérification de l’accessibilité et compatibilité avec les navigateurs principaux  \\n- Intégration fluide avec la structure HTML/CSS existante du site\\n\\n## Stack technologique\\n\\n- **HTML / SCSS** pour la structure et le style  \\n- **JavaScript natif (ES6)** pour la logique de validation et de rendu dynamique  \\n- Aucune librairie externe utilisée afin de renforcer les compétences fondamentales\\n\\nCe projet m’a permis de maîtriser la **validation avancée de formulaires**, la **gestion dynamique des interactions utilisateur**, et de développer des pratiques solides pour améliorer la **fiabilité des données collectées**.\",\"en\":\"# GameON – Advanced Form Validation Using Vanilla JavaScript\\n\\n## Educational Context\\n\\nThis project was part of my ReactJS training at OpenClassrooms (Bac+3/4 level). The main goal was to focus on **complex form validation** using vanilla JavaScript, in the context of an **event-driven gaming website**.\\n\\n## Project Objective\\n\\nThe visual layout of the site was already completed, except for the **event registration form**. My responsibilities were to:\\n\\n- **Implement a complete form validation system in JavaScript**\\n- Use **custom regex patterns** for each field (email, phone number, age, etc.)\\n- Dynamically display **contextual error messages**  \\n- Show or hide certain **inputs or options** based on user responses\\n\\n## Work Completed\\n\\n- Developed a custom validation system for all form fields  \\n- Implemented **precise regex patterns** to ensure data integrity (compliance and business logic)  \\n- Managed **conditional logic** to dynamically render fields based on inputs  \\n- Ensured accessibility and browser compatibility  \\n- Seamlessly integrated validation into the existing HTML/CSS layout\\n\\n## Tech Stack\\n\\n- **HTML / SCSS** for layout and styling  \\n- **Vanilla JavaScript (ES6)** for validation logic and dynamic rendering  \\n- No external libraries used to strengthen core JavaScript skills\\n\\nThis project helped me master **advanced form validation**, **real-time user interaction handling**, and develop strong practices for improving **data reliability**.\"}",
        "startDate": "2022-12-01",
        "endDate": "2022-12-31",
        "technologies": ["JavaScript", "Regex"],
        "tags": ["Formulaire", "Validation", "Formation"],
        "category": "Formation ReactJS",
        "thumbnailUrl": "projects/openclassrooms/projet4-gameon/1.png",
        "gallery": ["projects/openclassrooms/projet4-gameon/1.png", "projects/openclassrooms/projet4-gameon/2.png"],
        "gitUrl": "https://github.com/sarkande/GameOn-website-FR",
        "liveUrl": null,
        "role": "Développeur Frontend",
        "active": true,
        "old": false,
        "longDescription": "{\"fr\":\"Lors de ma formation ReactJS Bac+3/4, j’ai implémenté GameON, un module de validation de formulaires en JS natif pour un site gaming : regex spécifiques, messages d’erreur contextuels, champs conditionnels, accessibilité et compatibilité navigateurs, sans librairie externe.\",\"en\":\"During my ReactJS Bac+3/4 training, I built GameON, a native JS form validation module for a gaming event site: field-specific regex, contextual error messages, conditional inputs, accessibility and cross-browser compatibility, all implemented without external libraries.\"}"
    },
    {
        "title": "{\"fr\":\"OhMyFood\",\"en\":\"OhMyFood\"}",
        "description": "{\"fr\":\" Site mobile-first de sélection de plats de restaurant, avec animations fluides et navigation responsive.\",\"en\":\"Mobile-first website for selecting restaurant dishes, featuring smooth animations and responsive navigation.\"}",
        "content": "{\"fr\":\"# OhMyFood – Site mobile-first de sélection de plats\\n\\n## Contexte pédagogique\\n\\nCe projet a été mené dans le cadre de ma formation chez OpenClassrooms (niveau Bac+3/4). Il s’agissait de concevoir une **interface de commande de plats pour des restaurants**, avec une forte exigence en termes d’**animations**, de **responsive design** et d’**expérience utilisateur mobile**.\\n\\n## Objectif du projet\\n\\nL’objectif principal était de développer un **site vitrine mobile-first**, permettant à un utilisateur de :\\n\\n- Parcourir les **menus de plusieurs restaurants**\\n- Visualiser les **plats disponibles** dans chaque catégorie\\n- **Ajouter des plats à une sélection** (visuellement uniquement)\\n- Profiter d’une **interface fluide et animée** adaptée aux smartphones\\n\\n## Travaux réalisés\\n\\n- Création de plusieurs pages restaurant en HTML/SCSS avec contenu statique  \\n- Implémentation de **transitions et animations CSS** (chargement, sélection, déroulement des menus)  \\n- Mise en place d’un **design responsive mobile-first** (grille fluide, breakpoints adaptés)  \\n- Intégration de **polices, icônes et design system fourni**  \\n- Travail spécifique sur la **cohérence visuelle** et la fluidité des interactions\\n\\n## Stack technologique\\n\\n- **HTML5** pour la structure des pages  \\n- **SCSS** pour le style, les animations, et le responsive design  \\n- Pas de JavaScript requis, tout le travail est basé sur les capacités CSS\\n\\nCe projet m’a permis d’améliorer ma capacité à construire des **interfaces esthétiques et mobiles**, avec un soin particulier porté à la **fluidité des animations** et à la **qualité de l’intégration graphique**.\",\"en\":\"# OhMyFood – Mobile-first Restaurant Dish Selection Website\\n\\n## Educational Context\\n\\nThis project was part of my training at OpenClassrooms (Bac+3/4 level). The goal was to design a **restaurant menu interface**, with a strong focus on **animations**, **responsive layout**, and **mobile-first user experience**.\\n\\n## Project Objective\\n\\nThe main objective was to develop a **mobile-first showcase site** allowing users to:\\n\\n- Browse **menus from multiple restaurants**\\n- View **available dishes** in each category\\n- **Select dishes visually** (no order logic implemented)\\n- Enjoy a **smooth and animated interface** tailored for smartphones\\n\\n## Work Completed\\n\\n- Built several restaurant pages in HTML/SCSS with static content  \\n- Implemented **CSS-based transitions and animations** (loading, selection, menu reveal)  \\n- Designed a **mobile-first responsive layout** (fluid grid, adaptive breakpoints)  \\n- Integrated **provided fonts, icons, and design system**  \\n- Focused on **visual consistency** and smooth user experience\\n\\n## Tech Stack\\n\\n- **HTML5** for page structure  \\n- **SCSS** for styling, animations, and responsive design  \\n- No JavaScript involved, everything handled via CSS\\n\\nThis project helped me strengthen my skills in **mobile-oriented design**, with special attention to **animation smoothness** and **pixel-perfect layout implementation**.\"}",
        "startDate": "2022-01-01",
        "endDate": "2022-02-01",
        "technologies": ["HTML5", "Sass"],
        "tags": ["HTML5", "Sass"],
        "category": "Import React",
        "thumbnailUrl": "projects/openclassrooms/projet3-ohmyfood/5.png",
        "gallery": ["projects/openclassrooms/projet3-ohmyfood/5.png"],
        "gitUrl": null,
        "liveUrl": null,
        "role": "Développeur",
        "active": true,
        "old": false,
        "longDescription": "{\"fr\":\"Pour OhMyFood, j’ai conçu un site mobile-first de sélection de plats pour restaurants en HTML5/SCSS : animations CSS, responsive grid mobile-first, transitions fluides, intégration d’icônes et design system, sans JavaScript pour une UX parfaite.\",\"en\":\"For OhMyFood, I created a mobile-first restaurant menu site in HTML5/SCSS: CSS animations and fluid transitions, responsive mobile-first grid, integrated icons and design system, relying solely on CSS for a smooth, JS-free UX.\"}"
    },
    {
        "title": "{\"fr\":\"Booki\",\"en\":\"Booki\"}",
        "description": "{\"fr\":\"Site d’agence de voyage développé en HTML et SCSS, avec mise en page responsive.\",\"en\":\"Travel agency website built with HTML and SCSS, featuring a responsive layout.\"}",
        "content": "{\"fr\":\"# Booki – Site vitrine d’agence de voyage responsive\\n\\n## Contexte pédagogique\\n\\nBooki est le tout premier projet réalisé dans le cadre de ma formation OpenClassrooms (niveau Bac+3/4). Il consistait à intégrer une **maquette de site d’agence de voyage** en HTML et SCSS, avec pour objectif central la **maîtrise des fondamentaux du HTML sémantique et du responsive design**.\\n\\n## Objectif du projet\\n\\nLe projet visait à reproduire fidèlement une maquette fournie par un designer sur Figma, en assurant :\\n\\n- Une **mise en page adaptative** pour desktop, tablette et mobile\\n- Une structure HTML **sémantique et accessible**\\n- Une **intégration précise respectant la maquette Figma** (polices, couleurs, espacement)\\n\\n## Travaux réalisés\\n\\n- Développement complet des pages en **HTML5 structuré**  \\n- Utilisation du **SCSS** pour gérer les styles, les composants, et les breakpoints responsives  \\n- Intégration **pixel-perfect à partir de maquettes Figma**  \\n- Mise en place d’un **layout fluide** et de **grilles adaptatives**  \\n- Première initiation à la **gestion du responsive design sans framework**\\n\\n## Stack technologique\\n\\n- **HTML5** pour la structure et l’accessibilité  \\n- **SCSS** pour les styles organisés, variables, mixins, et responsive  \\n- Aucune logique JavaScript requise, focus pur sur l’intégration\\n\\nCe projet m’a permis d’acquérir une solide base en **intégration HTML/CSS**, de comprendre l’importance de l’**accessibilité** et de **l’adaptabilité multi-écrans**, en posant les fondations de mes compétences front-end.\",\"en\":\"# Booki – Responsive Travel Agency Showcase Website\\n\\n## Educational Context\\n\\nBooki was the very first project of my OpenClassrooms training program (Bac+3/4 level). The goal was to integrate a **travel agency website mockup** using HTML and SCSS, with a strong emphasis on mastering **semantic HTML and responsive design** fundamentals.\\n\\n## Project Objective\\n\\nThe main task was to faithfully reproduce a mockup provided on Figma, ensuring:\\n\\n- A **fully responsive layout** for desktop, tablet, and mobile  \\n- A **semantic and accessible HTML structure**  \\n- **Pixel-perfect implementation** of the Figma design (fonts, spacing, colors)\\n\\n## Work Completed\\n\\n- Built the complete pages using **structured HTML5**  \\n- Used **SCSS** for organized styling, components, and responsive breakpoints  \\n- **Pixel-perfect integration** based on Figma mockups  \\n- Created a **fluid layout** with **adaptive grids**  \\n- First hands-on experience with **responsive design without frameworks**\\n\\n## Tech Stack\\n\\n- **HTML5** for semantic structure and accessibility  \\n- **SCSS** for styling, variables, mixins, and responsive behavior  \\n- No JavaScript required – focused purely on layout and integration\\n\\nThis project helped me build a strong foundation in **HTML/CSS integration**, and understand the importance of **accessibility** and **multi-device adaptability**, setting the base for my front-end development skills.\"}",
        "startDate": "2022-02-01",
        "endDate": "2022-02-01",
        "technologies": ["HTML5", "CSS3"],
        "tags": ["HTML5", "CSS3"],
        "category": "Import React",
        "thumbnailUrl": "projects/openclassrooms/projet2-booki/1.png",
        "gallery": ["projects/openclassrooms/projet2-booki/1.png"],
        "gitUrl": null,
        "liveUrl": null,
        "role": "Développeur",
        "active": true,
        "old": false,
        "longDescription": "{\"fr\":\"Lors de ma formation OpenClassrooms, j’ai réalisé Booki, une intégration pixel-perfect d’une maquette d’agence de voyage en HTML5/SCSS avec layout fluide, grilles adaptatives et HTML sémantique accessible pour desktop, tablette et mobile.\",\"en\":\"During my OpenClassrooms training, I built Booki, a pixel-perfect travel agency mockup integration in HTML5/SCSS featuring fluid layouts, adaptive grids, and semantic accessible HTML for desktop, tablet, and mobile.\"}"
    },
    {
        "title": "{\"fr\":\"Foundry VTT Naheulbeuk\",\"en\":\"Foundry VTT Naheulbeuk\"}",
        "description": "{\"fr\":\"Mise en place d’un système de jeu de rôle Naheulbeuk personnalisé pour Foundry VTT.\",\"en\":\"Setup of a custom Naheulbeuk role-playing system for Foundry VTT.\"}",
        "content": "{\"fr\":\"# Naheulbeuk pour Foundry VTT – Système de JDR personnalisé\\n\\n## Contexte personnel\\n\\nDans le cadre de mes activités de loisir, j’ai entrepris de créer un **système de jeu de rôle (JDR) complet basé sur l’univers de Naheulbeuk** au sein de la plateforme Foundry VTT. Ce projet mêle passion pour les jeux de rôle et développement web avancé.\\n\\n## Objectif du projet\\n\\nL’objectif était de reproduire de façon fidèle les règles, mécaniques et l’univers du JDR Naheulbeuk en tant que **système modulaire personnalisable** dans Foundry VTT. Cela incluait :\\n\\n- L’intégration des **fiches de personnage complètes**, avec gestion dynamique des caractéristiques, équipements, sorts et compétences\\n- Le **système de lancers de dés personnalisés**\\n- Une **interface utilisateur immersive** fidèle à l’ambiance humoristique et médiévale du jeu\\n\\n## Travaux réalisés\\n\\n- Création d’un système de jeu Foundry VTT entièrement personnalisé  \\n- Intégration des **règles officielles Naheulbeuk**, automatisées pour les MJ et joueurs  \\n- Conception des **fiches de personnage interactives** avec effets conditionnels  \\n- Développement de **scripts personnalisés** pour la gestion des jets, des bonus, des modificateurs, et des dialogues  \\n- Travail sur l’esthétique (icônes, feuilles, ambiance visuelle cohérente avec l’univers de la saga)  \\n- **Hébergement du code source sur GitLab** pour le versioning et la collaboration\\n\\n## Stack technologique\\n\\n- **JavaScript / TypeScript** pour les scripts et l’API de Foundry  \\n- **Handlebars** pour le templating des fiches et modules  \\n- **CSS** pour la personnalisation de l’interface  \\n- Utilisation du **framework de création de système Foundry VTT**\\n\\nCe projet personnel m’a permis d’approfondir mes compétences en **développement modulaire**, en **UX/UI appliquée au jeu**, ainsi que dans la **lecture et l’implémentation de règles complexes** dans une interface interactive.\",\"en\":\"# Naheulbeuk for Foundry VTT – Custom RPG System\\n\\n## Personal Context\\n\\nAs a personal side project, I created a **fully featured tabletop RPG system based on the Naheulbeuk universe** within the Foundry VTT platform. This project combined my passion for role-playing games and advanced web development.\\n\\n## Project Objective\\n\\nThe goal was to faithfully replicate the mechanics, rules, and style of the Naheulbeuk RPG as a **customizable modular system** within Foundry VTT, including:\\n\\n- Integration of **complete interactive character sheets** with stats, gear, spells, and skills  \\n- A **custom dice rolling system**  \\n- An immersive **user interface** matching the medieval-comedy tone of the source material\\n\\n## Work Completed\\n\\n- Fully customized Foundry VTT game system built from scratch  \\n- Automated integration of **official Naheulbeuk rules** for both players and GMs  \\n- Designed **interactive character sheets** with conditional behaviors  \\n- Developed **custom scripts** to manage rolls, bonuses, modifiers, and in-game dialogs  \\n- UI/UX design tailored to the theme (icons, sheets, visual identity)  \\n- **Code hosted on GitLab** for version control and collaboration\\n\\n## Tech Stack\\n\\n- **JavaScript / TypeScript** for scripting and API usage  \\n- **Handlebars** for sheet and UI templating  \\n- **CSS** for interface customization  \\n- Built using the **Foundry VTT system creation framework**\\n\\nThis project allowed me to sharpen my skills in **modular development**, **UX/UI design in games**, and the implementation of **complex rule systems** in an interactive platform.\"}",
        "startDate": "2022-01-01",
        "endDate": "2022-02-01",
        "technologies": ["JavaScript"],
        "tags": ["JavaScript"],
        "category": "Import React",
        "thumbnailUrl": "projects/naheulbeuk/1.png",
        "gallery": ["projects/naheulbeuk/1.png"],
        "gitUrl": null,
        "liveUrl": null,
        "role": "Développeur",
        "active": true,
        "old": false,
        "longDescription": "{\"fr\":\"Pour Foundry VTT, j’ai développé un système JDR Naheulbeuk modulaire : fiches de perso interactives, scripts de lancers de dés, règles automatisées et UI immersive fidèle à l’univers, le tout open source sur GitLab.\",\"en\":\"For Foundry VTT, I built a modular Naheulbeuk RPG system: interactive character sheets, custom dice scripts, automated rules, and an immersive UI true to the lore, all open-source on GitLab.\"}"
    },
    {
        "title": "{\"fr\":\"Talents-Affinity\",\"en\":\"Talents-Affinity\"}",
        "description": "{\"fr\":\"Logiciel web de gestion des talents et compétences dédié aux RH et managers.\",\"en\":\"Web-based talent and skill management software for HR and managers.\"}",
        "content": "{\"fr\":\"# Talents Affinity – Logiciel web RH pour la gestion des talents\\n\\n## Contexte professionnel\\n\\nProjet réalisé dans le cadre de mon stage de fin de DUT, sur une durée de trois mois. J’ai intégré l’équipe de Talents Affinity, une startup développant un **outil de gestion des talents et des compétences** destiné aux services RH et aux managers. La mission s’est rapidement révélée ambitieuse, avec des responsabilités dépassant largement le cadre habituel d’un stage.\\n\\n## Objectif du projet\\n\\nLe but de Talents Affinity était de proposer une solution innovante capable :\\n\\n- D’**attribuer des compétences** aux collaborateurs de manière fine et modulaire  \\n- De croiser ces compétences avec les expériences passées pour **recommander les profils les plus adaptés à un poste**  \\n- De fournir un outil complet d’aide au recrutement, à l’évaluation et à la mobilité interne\\n\\n## Travaux réalisés\\n\\n- Participation active au développement de l’application web en **AngularJS (front)** et **Ruby on Rails (back)**  \\n- **Optimisation des performances et de la sécurité**, après analyse du code hérité d’une sous-traitance initiale  \\n- Refonte de plusieurs composants critiques (authentification, chargement des vues complexes, calculs de pertinence)  \\n- **Intégration d’APIs tierces** pour ajouter des tests de personnalité via des échanges avec des lead devs d’entreprises partenaires  \\n- Travail en **méthodologie agile**, avec **suivi des tâches via Trello** et estimation par points  \\n- **Autonomie complète** sur les développements confiés, tout en collaborant régulièrement avec les fondateurs  \\n- Utilisation d’un **environnement macOS**, une première pour moi, qui m’a permis de développer de nouvelles compétences, tout en profitant de mon aisance sur Linux acquise depuis des années\\n\\n## Stack technologique\\n\\n- **AngularJS** pour le front-end (SPA, directives personnalisées, gestion d’état)  \\n- **Ruby on Rails** pour le back-end (API RESTful, ActiveRecord)  \\n- **PostgreSQL** pour la base de données  \\n- Sécurisation via gestion avancée des sessions et contrôle des accès\\n\\nCe stage m’a permis de vivre une véritable expérience d’intégration dans un projet web à impact, avec des enjeux réels de **performance**, de **sécurité**, de **design applicatif** et d’**intégration de services externes**, tout en évoluant dans un contexte agile et autonome.\",\"en\":\"# Talents Affinity – Web-based Talent Management Platform for HR\\n\\n## Professional Context\\n\\nThis project was completed during a three-month internship as part of my DUT (2-year university diploma) program. I joined the team at Talents Affinity, a startup developing a **web platform for managing skills and talents** aimed at HR departments and managers. The experience quickly proved to be much more advanced than a typical internship.\\n\\n## Project Objective\\n\\nThe goal of Talents Affinity was to provide an innovative solution that could:\\n\\n- **Assign skills** to employees in a modular and precise way  \\n- Cross-reference those skills with past experiences to **suggest the best profiles for a given position**  \\n- Offer a comprehensive tool for recruitment, evaluation, and internal mobility\\n\\n## Work Done\\n\\n- Active participation in web development using **AngularJS (front-end)** and **Ruby on Rails (back-end)**  \\n- **Performance and security improvements**, refactoring outsourced legacy code  \\n- Reworking several critical components (authentication, view optimization, relevance calculations)  \\n- **Integration of third-party APIs** to provide personality testing features, working in direct contact with lead developers from external partners  \\n- Agile workflow with **task tracking via Trello** and estimation points system  \\n- **Full autonomy** in development tasks while maintaining collaboration with company founders  \\n- Use of **macOS for development**, a first for me, which helped broaden my skills, building on my prior experience with Linux\\n\\n## Tech Stack\\n\\n- **AngularJS** for the front-end (SPA, custom directives, state management)  \\n- **Ruby on Rails** for the back-end (RESTful API, ActiveRecord)  \\n- **PostgreSQL** for the database  \\n- Security handled via advanced session and access control mechanisms\\n\\nThis internship offered a real-world experience on a high-impact web application, addressing major challenges in **performance**, **security**, **architectural design**, and **external service integration**, all within an agile and autonomous development setting.\"}",
        "startDate": "2016-04-01",
        "endDate": "2016-07-15",
        "technologies": ["AngularJS", "RubyOnRails", "Bash"],
        "tags": ["AngularJS", "RubyOnRails", "Bash"],
        "category": "Import React",
        "thumbnailUrl": "projects/talents-affinity/3.png",
        "gallery": ["projects/talents-affinity/3.png"],
        "gitUrl": null,
        "liveUrl": null,
        "role": "Développeur",
        "active": true,
        "old": false,
        "longDescription": "{\"fr\":\"En stage de fin de DUT chez Talents Affinity, j’ai co-développé une appli web RH en AngularJS et Ruby on Rails, optimisant performance et sécurité, refondu des composants critiques, intégré des APIs de tests de personnalité et mis en place un matching compétences-poste.\",\"en\":\"During my final DUT internship at Talents Affinity, I co-developed an AngularJS/Ruby on Rails web RH tool, optimized performance and security, revamped critical components, integrated personality test APIs, and implemented skill-to-job matching recommendations.\"}"
    },
    {
        "title": "{\"fr\":\"Goldrush\",\"en\":\"Goldrush\"}",
        "description": "{\"fr\":\"Site AngularJS/Ruby on Rails pour une guilde multigaming, avec fonctionnalités dédiées à Dofus Touch.\",\"en\":\"AngularJS/Ruby on Rails website for a multigaming guild, featuring tools dedicated to Dofus Touch.\"}",
        "content": "{\"fr\":\"# Goldrush – Site AngularJS/Ruby on Rails pour guilde multigaming\\n\\n## Contexte personnel\\n\\nSuite à mon stage chez Talents Affinity et les compétences acquises en **AngularJS** et **Ruby on Rails**, j’ai initié le développement d’un site pour ma propre guilde multigaming à la sortie du jeu **Dofus Touch** (portage tablette du jeu PC). Le projet visait à soutenir notre organisation dans un contexte de jeu en ligne très actif.\\n\\n## Objectif du projet\\n\\nLa guilde Goldrush regroupait une **cinquantaine de membres**, intégrée dans une alliance comptant plus de **500 joueurs**. L’objectif du site était de **faciliter la gestion communautaire** et de centraliser des outils internes pour :\\n\\n- Afficher les **objectifs de guilde** et leur avancement  \\n- Partager les **succès collectifs** et événements majeurs  \\n- Structurer le **management des membres**, rôles, recrutements, et affectations en jeu\\n\\n## Travaux réalisés\\n\\n- Mise en place d’un **site web fullstack** avec **AngularJS pour le front** et **Ruby on Rails pour le back**  \\n- Développement de **modules personnalisés** (tableaux de bord de progression, annonces internes, espace membre)  \\n- Intégration d’un système d’**authentification et de rôles** pour segmenter les accès (membre, officier, admin)  \\n- Création d’une **base de données structurée** pour stocker profils, résultats de raids, activités de guilde  \\n- **Développement d’un bot Discord personnalisé**, permettant d’exécuter des **commandes spécifiques** liées à la guilde et à l’organisation des événements\\n\\n## Durée de vie et portée\\n\\nLe site est resté **en ligne pendant 3 mois**, le temps d’atteindre tous nos objectifs communautaires principaux. Une extension vers un mode multigaming (par exemple pour League of Legends) avait été envisagée mais n’a finalement pas été concrétisée.\\n\\n## Stack technologique\\n\\n- **AngularJS** pour une interface réactive et modulaire  \\n- **Ruby on Rails** pour la gestion serveur et la structure API  \\n- **PostgreSQL** pour la gestion des données  \\n- **Node.js / Discord.js** pour le développement du bot Discord  \\n- Hébergement sur un VPS personnel avec déploiement manuel\\n\\nCe projet a été l’occasion de concrétiser mes nouvelles compétences sur un **projet personnel à forte dimension communautaire**, combinant **frontend, backend**, **automatisation** et **gestion produit** dans un univers passionnant.\",\"en\":\"# Goldrush – AngularJS/Ruby on Rails Website for a Multigaming Guild\\n\\n## Personal Context\\n\\nAfter my internship at Talents Affinity and the skills I gained in **AngularJS** and **Ruby on Rails**, I started developing a site for my multigaming guild following the release of **Dofus Touch** (a tablet version of the original PC game). The goal was to support our online organization in a highly active gaming environment.\\n\\n## Project Objective\\n\\nGoldrush had around **50 members** and was part of an alliance of over **500 players**. The website aimed to **streamline guild management** and centralize internal tools for:\\n\\n- Displaying **guild goals** and tracking progress  \\n- Sharing **community achievements** and major events  \\n- Structuring **member management**, roles, recruitment, and in-game tasks\\n\\n## Work Completed\\n\\n- Developed a **fullstack web application** with **AngularJS on the frontend** and **Ruby on Rails on the backend**  \\n- Created **custom modules** (progress dashboards, internal announcements, member area)  \\n- Implemented **role-based authentication** to manage access rights (member, officer, admin)  \\n- Built a **structured database** to store profiles, raid results, and guild activity  \\n- **Developed a custom Discord bot** to execute **guild-related commands** and support event coordination\\n\\n## Lifespan and Scope\\n\\nThe website remained **live for 3 months**, which was enough to meet all our core community goals. A multigaming expansion (e.g., for League of Legends) was considered but ultimately not pursued.\\n\\n## Tech Stack\\n\\n- **AngularJS** for a reactive and modular UI  \\n- **Ruby on Rails** for backend logic and API structuring  \\n- **PostgreSQL** as the primary database  \\n- **Node.js / Discord.js** for the custom Discord bot  \\n- Hosted on a personal VPS with manual deployment\\n\\nThis project was a chance to put my new skills to work on a **community-driven fullstack application**, combining **frontend, backend**, **automation**, and **product management** in an engaging gaming context.\"}",
        "startDate": "2016-06-01",
        "endDate": "2016-08-31",
        "technologies": ["AngularJS", "RubyOnRails", "SysAdmin"],
        "tags": ["AngularJS", "RubyOnRails", "SysAdmin"],
        "category": "Import React",
        "thumbnailUrl": "projects/goldrush.png",
        "gallery": ["projects/goldrush.png"],
        "gitUrl": null,
        "liveUrl": null,
        "role": "Développeur",
        "active": true,
        "old": false,
        "longDescription": "{\"fr\":\"Pour ma guilde multigaming Goldrush, j’ai conçu un site fullstack AngularJS/Ruby on Rails avec dashboards de progression, annonces, gestion de rôles et authentification, complété par un bot Discord Node.js pour automatiser les commandes de guilde.\",\"en\":\"For my Goldrush multi-gaming guild, I built a fullstack AngularJS/Ruby on Rails site with progress dashboards, announcements, role-based auth, plus a Node.js Discord bot to automate guild commands.\"}"
    },
    {
        "title": "{\"fr\":\"OrcWar\",\"en\":\"OrcWar\"}",
        "description": "{\"fr\":\"Ajout de fonctionnalités et maintenance sur un jeu mobile Android/iOS.\",\"en\":\"Feature additions and maintenance on a mobile game for Android/iOS.\"}",
        "content": "{\"fr\":\"# Orc War – Développement et maintenance sur jeu mobile Unity\\n\\n## Contexte professionnel\\n\\nProjet réalisé en **job étudiant** durant l’été suivant ma première année de DUT. J’ai intégré une petite équipe en charge du développement et de la maintenance de plusieurs jeux mobiles, dont **Orc War**, un jeu disponible sur Android et iOS développé avec **Unity**.\\n\\n## Objectif du projet\\n\\nMa mission principale consistait à **ajouter de nouvelles fonctionnalités** au jeu existant, mais aussi à corriger plusieurs **bugs bloquants** remontés par les utilisateurs. En parallèle, une version alternative du jeu avec un **reskin futuriste** était en préparation, nécessitant de nouvelles unités spécifiques et des effets visuels supplémentaires.\\n\\n## Travaux réalisés\\n\\n- **Ajout de nouvelles unités**, notamment des **unités volantes** avec une gestion des collisions spécifique  \\n- Création de **véhicules de type hélicoptère**, intégration de comportements de vol, d’animations, et d’attaques par missiles  \\n- Participation au **reskin futuriste** du jeu, en réutilisant et adaptant les mécaniques existantes  \\n- Correction de bugs liés à l’IA, aux trajectoires de projectiles et à la gestion du son  \\n- Collaboration avec d’autres développeurs sur un **deuxième projet orienté FPS**, avec **algorithmes de Voronoï** pour simuler une **casse dynamique des décors**\\n\\n## Environnement de travail\\n\\nLe projet se déroulait dans un **cadre peu structuré**, sans gestion de version (pas de Git), les échanges se faisaient via **clé USB ou serveur FTP**. Cette expérience m’a **conforté dans l’idée d’adopter systématiquement un versionning propre** dans mes futurs projets. Malgré cela, j’ai travaillé **en totale autonomie** et j’ai beaucoup appris en très peu de temps.\\n\\n## Stack technologique\\n\\n- **Unity (C#)** pour la logique du jeu, les animations, le système de particules, les IA  \\n- Partage de fichiers via **serveur FTP** et **clés USB**\\n\\nCe projet reste pour moi un **excellent souvenir**, notamment car il m’a permis de **travailler dans le domaine du jeu vidéo**, un univers passionnant.\",\"en\":\"# Orc War – Development and Maintenance of a Mobile Game (Unity)\\n\\n## Professional Context\\n\\nThis project was part of a **summer student job** after my first year of a technical degree (DUT). I joined a small team responsible for developing and maintaining several mobile games, including **Orc War**, a Unity-based title available on Android and iOS.\\n\\n## Project Goals\\n\\nMy main mission was to **add new features** to the existing game and **fix several critical bugs** reported by users. Simultaneously, a futuristic **reskin** of the game was in development, requiring new types of units and additional visual effects.\\n\\n## Work Done\\n\\n- Developed **new units**, including **flying units** with specific collision mechanics  \\n- Built **helicopter-style vehicles** with flying behavior, animations, and missile attacks  \\n- Helped with the **futuristic reskin** of the game by adapting and extending existing mechanics  \\n- Fixed bugs related to AI, projectile paths, and sound management  \\n- Worked on a **second FPS-style game**, contributing to **Voronoi-based algorithms** for dynamic environment destruction\\n\\n## Work Environment\\n\\nThe project was conducted in a **very unstructured environment**, without any version control (no Git). File sharing was done through **USB drives and FTP servers**. This experience **reinforced my belief in the necessity of version control**, which I’ve applied to all my projects since. Despite the lack of structure, I was **completely autonomous** and learned a lot in a short time.\\n\\n## Tech Stack\\n\\n- **Unity (C#)** for game logic, animations, particles, and AI  \\n- File sharing via **FTP server** and **USB drives**\\n\\nThis project is a **great memory** as it allowed me to experience **game development** first-hand, an exciting and inspiring domain.\"}",
        "startDate": "2015-07-01",
        "endDate": "2015-12-31",
        "technologies": ["Unity", "CSharp", "Android"],
        "tags": ["Unity", "CSharp", "Android"],
        "category": "Import React",
        "thumbnailUrl": "projects/orcwar/2.png",
        "gallery": ["projects/orcwar/2.png"],
        "gitUrl": null,
        "liveUrl": null,
        "role": "Développeur",
        "active": true,
        "old": false,
        "longDescription": "{\"fr\":\"En job étudiant, j’ai renforcé Orc War sur Unity : ajout d’unités volantes et d’hélicoptères avec collisions et animations, correction de bugs IA, trajectoires et son, participation au reskin futuriste, le tout en totale autonomie.\",\"en\":\"As a student dev, I enhanced Orc War in Unity: added flying units and helicopters with collision and animations, fixed AI, projectile and audio bugs, contributed to the futuristic reskin, all while working fully autonomously.\"}"
    },
    {
        "title": "{\"fr\":\"Jonquille Sportive Reignier\",\"en\":\"Jonquille Sportive Reignier\"}",
        "description": "{\"fr\":\"Site d’un club de football avec affichage des actualités, matchs et calendrier.\",\"en\":\"Football club website displaying news, matches, and calendar.\"}",
        "content": "{\"fr\":\"# Jonquille Sportive Reignier – Site pour un club de football\\n\\n## Contexte académique et professionnel\\n\\nProjet réalisé en **équipe** dans le cadre de mon DUT, pour une **vraie entreprise cliente** : le club de football **Jonquille Sportive Reignier**. Ce projet avait un **objectif concret et professionnel**, avec une livraison fonctionnelle à destination du grand public. J’en ai assuré le rôle de **chef de projet** et **lead technique**.\\n\\n## Objectif du projet\\n\\nLe club souhaitait disposer d’un **site web moderne et administrable** permettant :\\n\\n- L’affichage des **actualités** liées au club  \\n- La publication des **matchs à venir** et des **résultats**  \\n- Un **calendrier** des événements et entraînements  \\n- Un **système de gestion des comptes joueurs** (création, modification, suppression)\\n\\n## Contraintes techniques et choix de stack\\n\\nLe développement a été initialement lancé en **ASP.NET**, mais des **limitations imposées par les hébergeurs** ont rendu ce choix non viable. Le projet a donc été **recommencé intégralement en PHP**, en suivant une architecture **MVC from scratch**.\\n\\n## Collaboration avec le client\\n\\nLe club disposait déjà d’un **site no-code**, mais avec de nombreuses lacunes : **publicités intrusives**, **manque de lisibilité**, et **absence d’optimisation SEO**. Plusieurs **réunions ont été organisées** avec le client pour :\\n\\n- Valider les **besoins fonctionnels**  \\n- Choisir les **maquettes**  \\n- Imposer une **charte graphique** (peu harmonieuse visuellement mais souhaitée par le client)\\n\\n## Travaux réalisés\\n\\n- Rédaction du cahier des charges  \\n- Mise en place d’un MVC personnalisé en PHP  \\n- Modules pour l’actualité, les matchs, les résultats, le calendrier  \\n- **Back-office sécurisé** pour la gestion de contenu  \\n- Module de gestion des **comptes joueurs**  \\n- Déploiement sur un hébergement mutualisé PHP/MySQL\\n\\n## Stack technologique\\n\\n- **PHP (MVC personnalisé)**  \\n- **MySQL**  \\n- **HTML / CSS / JavaScript**  \\n- Wireframes pour la validation client\\n\\nCe projet a été une **expérience très formatrice**, combinant **travail en équipe**, **contact client réel**, et **gestion de projet complète**.\",\"en\":\"# Jonquille Sportive Reignier – Football Club Website\\n\\n## Academic and Professional Context\\n\\nProject carried out as a **team** during my DUT studies, for a **real client**: the football club **Jonquille Sportive Reignier**. It was a **real-world project** aimed at the general public. I served as the **project manager** and **technical lead**.\\n\\n## Project Goals\\n\\nThe club needed a **modern, user-manageable website** to:\\n\\n- Publish **club news**  \\n- Display upcoming **matches** and **results**  \\n- Show a **calendar** of events and trainings  \\n- Manage **player accounts** (create, edit, delete)\\n\\n## Technical Constraints and Stack\\n\\nThe project started with **ASP.NET**, but **hosting limitations** (lack of support for .NET versions) forced us to **rebuild everything from scratch** in **PHP**, using a custom **MVC architecture**.\\n\\n## Client Collaboration\\n\\nThe club previously used a **no-code site**, but it was full of **ads**, **hard to read**, and **not SEO-friendly**. We held several **meetings with the client** to:\\n\\n- Validate **functional requirements**  \\n- Approve **wireframes** and UI layouts  \\n- Respect a **client-imposed color scheme**, even if it lacked visual harmony\\n\\n## Work Done\\n\\n- Requirements gathering and specifications  \\n- Custom PHP MVC architecture  \\n- Modules for news, matches, results, and calendar  \\n- **Secure back-office** for content management  \\n- **Player account management** module  \\n- Deployment on shared PHP/MySQL hosting\\n\\n## Tech Stack\\n\\n- **PHP (custom MVC)**  \\n- **MySQL**  \\n- **HTML / CSS / JavaScript**  \\n- Wireframes for UI validation\\n\\nThis project was a **very instructive experience**, combining **teamwork**, **client interaction**, and **full project lifecycle management**.\"}",
        "startDate": "2015-01-01",
        "endDate": "2016-06-01",
        "technologies": ["PHP", "JavaScript", "CSS3"],
        "tags": ["PHP", "JavaScript", "CSS3"],
        "category": "Import React",
        "thumbnailUrl": "projects/jonquille/1.png",
        "gallery": ["projects/jonquille/1.png", "projects/jonquille/2.png"],
        "gitUrl": null,
        "liveUrl": null,
        "role": "Développeur",
        "active": true,
        "old": false,
        "longDescription": "{\"fr\":\"En tant que lead technique et chef de projet pour Jonquille Sportive Reignier, j’ai reconstruit un site PHP MVC sur mesure avec back-office sécurisé pour actualités, calendrier, matchs, résultats et gestion des comptes joueurs, en respectant les maquettes et contraintes d’hébergement.\",\"en\":\"As technical lead and project manager for Jonquille Sportive Reignier, I rebuilt a bespoke PHP MVC site with a secure back-office for news, calendar, matches, results, and player account management, adhering to client mockups and hosting constraints.\"}"
    },
    {
        "title": "{\"fr\":\"Bujinkan-kanji\",\"en\":\"Bujinkan-kanji\"}",
        "description": "{\"fr\":\"Maintenance et développement du site d’un club d’arts martiaux depuis 2015 : Joomla, WordPress, Angular, puis Odoo.\",\"en\":\"Ongoing maintenance and development of a martial arts club website since 2015: Joomla, WordPress, Angular, then Odoo.\"}",
        "content": "{\"fr\":\"# Bujinkan Kanji – Site évolutif pour un club d’arts martiaux (2015 – aujourd’hui)\\n\\n## Contexte : de la salle au code\\n\\nEn 2015, alors étudiant en DUT, j’ai rejoint avec des amis le club de ninjutsu **Bujinkan Kanji** à Annecy. L’objectif était de bouger un peu et sortir de nos écrans, tout en découvrant un art martial riche et traditionnel.\\n\\nLe site du club existait déjà, mis en place par un ancien élève basé à Dijon qui gérait également son propre club. Il avait opté pour une solution **Joomla**, difficile à maintenir à distance. Chaque modification prenait plusieurs semaines à être effectuée.\\n\\nVoyant cela, j’ai proposé de prendre en charge la **gestion technique**. À l’époque, le site était hébergé sur un **serveur privé à 50 €/mois**, une solution coûteuse pour une structure associative.\\n\\n## Perte du site et relance sous WordPress\\n\\nUn jour, le site a été subitement désactivé, entraînant la **perte du domaine et de l’hébergement**. Grâce à la **Wayback Machine**, j’ai pu récupérer une partie du contenu.\\n\\nJ’ai alors refondu entièrement le site sous **WordPress**, sur un nouvel hébergement plus économique. De **2016 à 2022**, le site a évolué avec un **espace membre**, un **forum**, des **vidéos**, des ajustements de thèmes et de plugins.\\n\\nMais WordPress a montré ses limites : performances faibles, surcouche technique lourde, et fonctionnalités inutiles.\\n\\n## Refonte Angular et harmonisation\\n\\nEn 2022, l’ouverture d’une nouvelle section du club à **Fréjus** m’a amené à concevoir une **architecture commune** pour les deux clubs. J’ai refondu le site en **Angular**, plus rapide, moderne, responsive et orienté SEO.\\n\\nUn petit back-end en **PHP** permettait de servir les articles, mais les contenus devaient être modifiés à la main dans la base de données — une contrainte importante pour un projet bénévole.\\n\\n## Migration vers Odoo en 2025\\n\\nEn 2025, j’ai décidé de migrer le site vers **Odoo**, pour permettre aux dirigeants du club d’être **autonomes** sur la gestion du contenu, mais aussi pour ajouter des **fonctionnalités ERP** : inscriptions, paiements, gestion de documents et communication.\\n\\nL’infrastructure repose sur un **VPS OVH** avec une stack **Docker**, et l’envoi d’emails est géré via **Brevo (ex-Sendinblue)**.\\n\\nCe choix était aussi lié à mon **mastère Bac+5/6** : je travaille quotidiennement avec Odoo, ce qui rend l’évolution du site plus fluide.\\n\\n## Mes activités sur le projet\\n\\nEn plus du développement et de la maintenance, j’assure aussi :\\n- La **gestion des réseaux sociaux** (Facebook)\\n- Le suivi via **Google Analytics**\\n- Une amélioration de base du **référencement SEO**\\n- Un **support régulier** auprès des dirigeants du club\\n\\n## Stack utilisée au fil du temps\\n\\n- **Joomla** (2015) – mise en place initiale distante  \\n- **WordPress** (2016–2022) – facile d’accès, mais trop lourd  \\n- **Angular + PHP** (2022–2025) – performant, mais trop rigide à gérer  \\n- **Odoo** (depuis 2025) – ERP complet, CMS intégré, 100% administrable  \\n- **Docker + VPS OVH + Brevo** pour l’infrastructure et les mails\\n\\n## Conclusion\\n\\nCe projet bénévole m’a accompagné sur plus de **10 ans**. Il m’a permis de tester, d’évoluer, d’expérimenter des stacks modernes, tout en **répondant aux besoins concrets** d’une structure réelle. Il est toujours en production et continuera d’évoluer.\",\"en\":\"# Bujinkan Kanji – Evolving Website for a Martial Arts Club (2015 – Present)\\n\\n## Background: From Dojo to Code\\n\\nIn 2015, while pursuing my DUT, I joined the **Bujinkan Kanji ninjutsu club** in Annecy with some classmates. The goal was to get active outside of screen time and explore a traditional martial art.\\n\\nThe club already had a Joomla-based website managed remotely by a former student living in Dijon. Though functional, it was **slow to maintain** — updates took weeks.\\n\\nI offered to handle the **technical management** myself. The site was hosted on a **private server costing €50/month**, which was a financial burden for a small association.\\n\\n## Site Loss and WordPress Rebuild\\n\\nEventually, the site and domain were lost due to service cancellation. I recovered most of the content using the **Wayback Machine** and rebuilt everything using **WordPress**, on a new domain and affordable hosting.\\n\\nBetween **2016 and 2022**, the site evolved: **forum**, **video section**, improved **themes**, and **plugin customization**. However, WordPress became too **bloated** and **slow**, with unnecessary features for the club’s real needs.\\n\\n## Angular Redesign and Club Expansion\\n\\nIn 2022, a second club branch opened in **Fréjus**. I took the opportunity to harmonize both websites with a new common architecture built with **Angular**, delivering speed, responsiveness, and SEO optimization.\\n\\nA **basic PHP backend** was used to serve articles, but updates required direct **database edits**, which was time-consuming and unsustainable.\\n\\n## Odoo Migration in 2025\\n\\nTo enable the club’s leadership to **manage content independently** and handle **administrative tasks**, I migrated everything to **Odoo** in 2025.\\n\\nWith Odoo, the club now benefits from:\\n- Full content editing autonomy\\n- ERP modules for event and member management\\n- Online registration and communication features\\n\\nI deployed the new system using **Docker** on an **OVH VPS**, with **Brevo (formerly Sendinblue)** handling outgoing emails.\\n\\nThe choice was made easier by my daily use of Odoo in my **Master’s degree (Bac+5/6)**, giving me both technical confidence and operational efficiency.\\n\\n## Additional Responsibilities\\n\\nAlongside development, I also handle:\\n- **Social media** (mainly Facebook)\\n- **Google Analytics** setup\\n- Basic **SEO optimization**\\n- Regular **support** for club administrators\\n\\n## Tech Stack Timeline\\n\\n- **Joomla** (2015) – Remote-managed, initial setup  \\n- **WordPress** (2016–2022) – Customizable but heavy and slow  \\n- **Angular + PHP** (2022–2025) – Modern and fast, but not user-friendly  \\n- **Odoo** (2025–present) – Unified CMS + ERP for complete autonomy  \\n- **Docker + VPS OVH + Brevo** for hosting and email\\n\\n## Conclusion\\n\\nThis long-term project, active for **over 10 years**, allowed me to experiment with modern web technologies in a real-world setting. It continues to grow and serves as both a digital hub and ERP tool for the club.\"}",
        "startDate": "2015-11-01",
        "endDate": null,
        "technologies": ["WordPress", "PHP", "Joomla", "Angular", "Odoo", "SysAdmin", "Docker"],
        "tags": ["WordPress", "PHP", "Joomla", "Angular", "Odoo", "SysAdmin", "Docker"],
        "category": "Import React",
        "thumbnailUrl": "projects/bujinkan-kanji.png",
        "gallery": ["projects/bujinkan-kanji.png"],
        "gitUrl": null,
        "liveUrl": "https://bujinkan-kanji.fr/",
        "role": "Développeur",
        "active": true,
        "old": false,
        "longDescription": "{\"fr\":\"Pour Bujinkan Kanji, j’ai piloté la gestion technique : reprise Joomla, migration WordPress, refonte Angular multi-sites puis bascule vers Odoo en 2025 sur Docker/VPS OVH, avec SEO, suivi Google Analytics et support régulier aux dirigeants.\",\"en\":\"For Bujinkan Kanji, I led technical management: revitalized a Joomla site, migrated to WordPress, rebuilt in Angular for multiple branches, then switched to Odoo in 2025 on Docker/VPS OVH, adding SEO, Google Analytics tracking and ongoing executive support.\"}"
    },
    {
        "title": "{\"fr\":\"RPG 3D Unity\",\"en\":\"RPG 3D Unity\"}",
        "description": "{\"fr\":\"Prototype de RPG 3D sous Unity avec modélisation et texturing réalisés manuellement (Maya, Substance)\",\"en\":\"3D RPG prototype in Unity with custom modeling and texturing (Maya, Substance)\"}",
        "content": "{\"fr\":\"# RPG 3D Unity – Prototype de jeu de rôle solo en 3D\\n\\n## Contexte\\n\\nDurant mes études de langues, j’ai initié plusieurs **prototypes de jeux vidéo** en solo sur **Unity**, par curiosité et passion. Ce projet visait à créer un **RPG tactique en 3D** dans un univers fantastique, intégrant des éléments comme l’exploration, le combat et la gestion d’inventaire.\\n\\n## Réalisation technique\\n\\nJ’ai utilisé **Maya** pour modéliser mes premiers personnages et environnements 3D, puis **Substance Painter** pour les texturer. Le tout a été intégré dans **Unity**, avec des scripts en **C#** pour gérer les déplacements, collisions, attaques, menus, etc.\\n\\nCe projet m’a permis de :\\n- Découvrir le **workflow 3D complet** (modélisation, UV, texturing, animation)\\n- Renforcer mes compétences en **programmation orientée jeu**\\n- Structurer une **architecture de projet** dans Unity\\n\\n## Limites du développement solo\\n\\nTrès vite, j’ai constaté un frein important : **je ne suis ni game designer, ni modeleur 3D professionnel**. Jongler entre le code, la création des assets, l’UI et le scénario s’est révélé trop chronophage en solo.\\n\\nCe projet m’a appris que sans **équipe pluridisciplinaire**, il devient difficile d’atteindre une qualité professionnelle. C’est une réalité que j’ai retrouvée dans plusieurs de mes tentatives de projets Unity en autonomie.\\n\\n## Abandon réfléchi\\n\\nMalgré les avancées, le projet a été **abandonné**. Non pas par manque d’intérêt, mais parce qu’il m’a permis de comprendre :\\n- L’importance d’un **game design solide et défini dès le départ**\\n- Le besoin d’une **équipe complémentaire** pour un projet ambitieux\\n\\n## Stack utilisée\\n\\n- **Unity** (C#)\\n- **Maya** pour les modèles 3D\\n- **Substance Painter** pour les textures\",\"en\":\"# RPG 3D Unity – Solo 3D Role-Playing Game Prototype\\n\\n## Context\\n\\nWhile studying languages, I experimented with several **personal game projects** using **Unity**, out of passion for development and design. This one aimed to be a **3D tactical RPG**, featuring exploration, combat mechanics, and inventory systems.\\n\\n## Technical Work\\n\\nI modeled characters and environments using **Maya**, textured them with **Substance Painter**, and integrated everything into **Unity** with scripts written in **C#**.\\n\\nThis allowed me to:\\n- Learn the complete **3D game asset pipeline**\\n- Improve my **game programming structure**\\n- Build a modular Unity project from scratch\\n\\n## The Challenges of Solo Development\\n\\nHowever, I quickly hit a wall: I’m neither a professional **3D artist** nor a **game designer**. Handling code, asset creation, UI, and game logic alone was simply overwhelming.\\n\\nThis project taught me that without a **diverse team**, achieving professional quality in solo Unity projects is extremely difficult. It’s a pattern I’ve seen across multiple solo game dev attempts.\\n\\n## Conscious Abandonment\\n\\nThough the project didn’t reach completion, it was **deliberately set aside**. It helped me realize the importance of:\\n- Having a **clear game design vision** upfront\\n- Collaborating with **specialized teammates** on ambitious projects\\n\\n## Tech Stack\\n\\n- **Unity** (C#)\\n- **Maya** for 3D modeling\\n- **Substance Painter** for texturing\"}",
        "startDate": "2021-01-01",
        "endDate": "2021-03-03",
        "technologies": ["Unity", "CSharp", "Autodesk Maya"],
        "tags": ["Unity", "CSharp", "Autodesk Maya"],
        "category": "Import React",
        "thumbnailUrl": "projects/rpg3d/1.png",
        "gallery": ["projects/rpg3d/1.png"],
        "gitUrl": null,
        "liveUrl": null,
        "role": "Développeur",
        "active": true,
        "old": false,
        "longDescription": "{\"fr\":\"En solo, j’ai prototypé un RPG 3D sous Unity : modélisation avec Maya, texturing via Substance Painter et scripts C# pour exploration, combats et gestion d’inventaire, découvrant le workflow 3D complet et l’importance d’une équipe pluridisciplinaire.\",\"en\":\"On my own, I prototyped a 3D RPG in Unity: modeling with Maya, texturing via Substance Painter, and C# scripts for exploration, combat, and inventory management, mastering the full 3D workflow and realizing the need for a multidisciplinary team.\"}"
    },
    {
        "title": "{\"fr\":\"RPG tactical 3D Unity\",\"en\":\"RPG tactical 3D Unity\"}",
        "description": "{\"fr\":\"Jeu tactique RPG en 3D sous Unity avec génération procédurale de niveaux.\",\"en\":\"3D tactical RPG game in Unity with procedural level generation.\"}",
        "content": "{\"fr\":\"# Tactical RPG 3D – Jeu en équipe sous Unity avec génération procédurale\\n\\n## Contexte\\n\\nSuite à mes premières expériences solo sur Unity, j’ai lancé avec un ami un projet de **jeu de rôle tactique en 3D**, cette fois-ci en **équipe**. L’objectif était de créer un gameplay stratégique avec **génération procédurale de niveaux**, le tout dans un univers original avec une vraie trame narrative.\\n\\n## Répartition des rôles\\n\\nJe me suis concentré sur la **programmation du gameplay** et les systèmes techniques :\\n- Génération aléatoire de maps en tuiles\\n- Système de combat au tour par tour\\n- Gestion des états (poison, gel, etc.)\\n\\nMon collègue, de son côté, gérait toute la **partie scénario et worldbuilding**, ce qui a permis une vraie complémentarité dans l’équipe.\\n\\n## Avancées techniques\\n\\nLe projet a rapidement progressé grâce à cette organisation claire. Nous avons mis en place :\\n- Des algorithmes de génération procédurale (maps, obstacles, ennemis)\\n- Un moteur de règles tactiques (initiative, portée, ligne de vue…)\\n- Une interface basique avec menus et inventaire\\n\\nL’un des défis principaux restait l’**implémentation d’une IA cohérente** pour les ennemis, capable de choisir la bonne action en fonction de son environnement et des stats.\\n\\n## Fin prématurée\\n\\nMalheureusement, le projet a été **mis en pause** après le départ de mon binôme, qui a choisi de se consacrer à d’autres priorités. Seul, il était difficile de porter un projet aussi ambitieux, surtout avec une dimension narrative importante.\\n\\n## Stack utilisée\\n\\n- **Unity** (C#)\\n- Génération procédurale maison\\n- Scripting d’IA, combat, UI\",\"en\":\"# Tactical RPG 3D – Unity Game with Procedural Generation (Team Project)\\n\\n## Overview\\n\\nBuilding on my previous solo Unity projects, I started this one with a friend: a **3D tactical RPG** featuring **procedural level generation** and turn-based combat. The goal was to combine technical complexity with a meaningful narrative — and this time, we worked **as a team**.\\n\\n## Role Distribution\\n\\nI handled the **technical development**:\\n- Procedural map generation\\n- Turn-based combat system\\n- State mechanics (poison, stun, etc.)\\n\\nMy teammate focused on **storyline and game design**, which gave us a well-balanced workflow.\\n\\n## Technical Progress\\n\\nWe made fast progress thanks to a clear separation of responsibilities. Core systems included:\\n- Tile-based procedural level generation\\n- Tactical combat engine with range, initiative, status effects\\n- Simple interface with menus and item management\\n\\nOne major challenge was building a **smart AI system** for enemies — able to evaluate surroundings and make strategic choices.\\n\\n## Early Shutdown\\n\\nThe project was unfortunately **put on hold** when my partner stepped away to focus on other commitments. The narrative-heavy structure made it difficult to continue alone.\\n\\n## Tech Stack\\n\\n- **Unity** (C#)\\n- Custom procedural generation engine\\n- Combat, AI and UI scripting\"}",
        "startDate": "2021-09-01",
        "endDate": "2021-09-10",
        "technologies": ["Unity", "CSharp", "Autodesk Maya"],
        "tags": ["Unity", "CSharp", "Autodesk Maya"],
        "category": "Import React",
        "thumbnailUrl": "projects/tactical/1.png",
        "gallery": ["projects/tactical/1.png"],
        "gitUrl": null,
        "liveUrl": null,
        "role": "Développeur",
        "active": true,
        "old": false,
        "longDescription": "{\"fr\":\"En binôme, j’ai développé sous Unity un RPG tactique 3D avec génération procédurale de cartes, un système de combat au tour par tour et gestion des états (poison, gel), intégrant une IA basique ennemie et une UI prototype pour le gameplay stratégique.\",\"en\":\"In a duo, I built a 3D tactical RPG in Unity featuring procedural map generation, a turn-based combat system and status effects (poison, freeze), with basic enemy AI and a prototype UI for strategic gameplay.\"}"
    },
    {
        "title": "{\"fr\":\"android Unity\",\"en\":\"android Unity\"}",
        "description": "{\"fr\":\"Prototype de jeu mobile Android/iOS.\",\"en\":\"3D RPG prototype mobile game for Android/iOS.\"}",
        "content": "{\"fr\":\"# Prototype Android Unity – Jeu de survie coopératif en 3D\\n\\n## Contexte\\n\\nSuite à mon expérience passée sur **OrcWar**, j’ai souhaité continuer à expérimenter **Unity sur mobile**, en particulier sur Android. L’idée de ce prototype était d’explorer la **création d’un jeu de survie coopératif**, inspiré du gameplay de **Hordes**, mais en environnement **3D temps réel**.\\n\\n## Objectif du projet\\n\\nL’objectif était de poser les bases d’un jeu dans lequel plusieurs joueurs pourraient :\\n- Survivre dans un monde hostile généré aléatoirement\\n- Collecter des ressources limitées\\n- Coopérer ou trahir pour survivre à des vagues d’ennemis\\n\\n## Réalisation\\n\\nCe projet est resté à l’état de **prototype**, avec notamment :\\n- Des tests d’interfaces mobiles (contrôles tactiles)\\n- Un environnement 3D simple\\n- Des scripts de gestion de ressources et d’ennemis de base\\n\\n## Portée limitée\\n\\nLe développement a été volontairement limité à une **ébauche technique**, servant de terrain d’expérimentation. Il n’avait pas vocation à être finalisé mais m’a permis de continuer à **explorer Unity sous l’angle mobile** et **multijoueur coopératif**.\\n\\n## Stack utilisée\\n\\n- **Unity** (C#)\\n- Build Android\\n- Tests d’interactions multijoueur en local\",\"en\":\"# Android Unity Prototype – 3D Cooperative Survival Game\\n\\n## Background\\n\\nAfter my previous experience on **OrcWar**, I decided to continue experimenting with **Unity for mobile**, specifically Android. The goal was to explore the concept of a **cooperative survival game**, inspired by the mechanics of **Hordes**, but in a **3D real-time** format.\\n\\n## Project Goal\\n\\nThe idea was to create a game where multiple players could:\\n- Survive in a hostile, procedurally generated world\\n- Gather limited resources\\n- Choose to cooperate or betray each other during enemy waves\\n\\n## Development\\n\\nThe project remained at a **prototype** stage, including:\\n- Mobile UI and touch control experiments\\n- Basic 3D environment setup\\n- Early scripting for resource management and enemy behavior\\n\\n## Scope and Outcome\\n\\nThis was a **technical draft** rather than a full project. It served as a **learning ground** to deepen my knowledge of **Unity for Android** and experiment with **cooperative mechanics**.\\n\\n## Tech Stack\\n\\n- **Unity** (C#)\\n- Android build\\n- Local multiplayer interaction tests\"}",
        "startDate": "2021-01-01",
        "endDate": "2021-01-01",
        "technologies": ["Unity", "CSharp", "Android"],
        "tags": ["Unity", "CSharp", "Android"],
        "category": "Import React",
        "thumbnailUrl": "projects/android/1.png",
        "gallery": ["projects/android/1.png"],
        "gitUrl": null,
        "liveUrl": null,
        "role": "Développeur",
        "active": true,
        "old": false,
        "longDescription": "{\"fr\":\"Pour un prototype Android, j’ai exploré Unity avec un jeu de survie coopératif 3D : contrôles tactiles, environnement généré aléatoirement, gestion de ressources et scripts d’IA ennemie, posant les bases d’un gameplay multijoueur.\",\"en\":\"As an Android prototype, I explored Unity by creating a 3D cooperative survival game: touch controls, procedurally generated environments, resource management and enemy AI scripts, laying the groundwork for multiplayer gameplay.\"}"
    },
    {
        "title": "{\"fr\":\"OCR Discord\",\"en\":\"OCR Discord\"}",
        "description": "{\"fr\":\"OCR Discord\",\"en\":\" OCR Discord\"}",
        "content": "{\"fr\":\"# OCR Discord – Analyse automatisée de captures PVP via bot Discord et OCR\\n\\n## Contexte\\n\\nToujours dans l’univers du jeu Dofus, j’ai cette fois-ci accompagné un **développeur junior** en tant que **consultant technique** sur un projet original mêlant Discord, OCR et base de données cloud.  \\nL’objectif : **analyser automatiquement des captures d’écran de résultats de combats PVP**, postées par les joueurs sur un salon Discord.\\n\\n## Fonctionnement\\n\\nLe processus était le suivant :\\n1. Un joueur publie une **capture d’écran du résultat d’un combat** sur Discord\\n2. Un **bot Discord détecte** l’image\\n3. Le bot utilise l’**OCR de Google (Vision API)** pour extraire les données de score\\n4. Les résultats sont **stockés dans Firebase**\\n5. Un système de **classement PVP automatisé** est généré à partir des données agrégées\\n\\n## Mon rôle\\n\\nEn tant que **consultant technique**, j’ai :\\n- Guidé le développeur dans l’**architecture du projet**\\n- Aidé à l’**intégration de l’API Google Vision**\\n- Conseillé sur la **modélisation de la base Firebase**\\n- Suggéré des approches d’amélioration de la fiabilité (filtrage des images, gestion des erreurs OCR, etc.)\\n\\n## Technologies utilisées\\n\\n- **Bot Discord** (Node.js)\\n- **Google Cloud Vision API** (OCR)\\n- **Firebase Realtime Database**\\n- OCR appliqué sur **captures Discord**\\n\\n## Intérêt\\n\\nCe projet montre une autre approche d’exploitation de données dans un jeu, en exploitant les outils communautaires (Discord) plutôt que les données internes. Cela permet une **automatisation à moindre coût** tout en restant dans un cadre respectueux du jeu.\",\"en\":\"# OCR Discord – Automated PVP Result Parsing via Discord Bot and Google OCR\\n\\n## Context\\n\\nStill within the Dofus universe, I contributed to this project as a **technical consultant** for a junior developer. The idea was to **analyze PVP match result screenshots** shared on Discord using OCR, then store and rank players based on performance.\\n\\n## Workflow\\n\\nThe process involved:\\n1. A player posts a **PVP result screenshot** on a Discord channel\\n2. A **Discord bot detects** the image\\n3. The bot uses **Google Vision API (OCR)** to extract match details\\n4. The data is **stored in Firebase**\\n5. A **PVP leaderboard** is automatically generated from the collected results\\n\\n## My Role\\n\\nAs a **consultant**, I:\\n- Helped design the **project architecture**\\n- Assisted with **Google Vision API integration**\\n- Advised on **Firebase database modeling**\\n- Suggested ways to improve OCR reliability and image validation\\n\\n## Tech Stack\\n\\n- **Discord Bot** (Node.js)\\n- **Google Vision API** for OCR\\n- **Firebase Realtime Database**\\n- Image capture and processing via **Discord uploads**\\n\\n## Key Value\\n\\nThis project demonstrates a **community-centric automation** strategy — leveraging tools like Discord and OCR to create an external data pipeline, without needing access to internal game data.\"}",
        "startDate": "2022-01-01",
        "endDate": "2022-01-01",
        "technologies": ["JavaScript", "API Google"],
        "tags": ["JavaScript", "API Google"],
        "category": "Import React",
        "thumbnailUrl": "projects/OCR_discord/1.png",
        "gallery": ["projects/OCR_discord/1.png"],
        "gitUrl": null,
        "liveUrl": null,
        "role": "Développeur",
        "active": true,
        "old": false,
        "longDescription": "{\"fr\":\"J’ai supervisé un projet d’analyse de captures d’écran PvP Dofus via un bot Discord en Node.js, intégrant l’API Google Vision pour OCR, stockage Firebase et génération automatique de classements PVP.\",\"en\":\"I supervised an automated analysis of Dofus PvP screenshots via a Node.js Discord bot using Google Vision OCR, storing data in Firebase and generating automated PvP leaderboards.\"}"
    },
    {
        "title": "{\"fr\":\"OCR Dofus\",\"en\":\"OCR Dofus\"}",
        "description": "{\"fr\":\"OCR Dofus\",\"en\":\" OCR Dofus\"}",
        "content": "{\"fr\":\"# OCR Dofus – Outil de lecture d'écran en temps réel pour le jeu Dofus\\n\\n## Contexte\\n\\nAvant de développer mon outil d’analyse de paquets réseau pour Dofus, j’avais déjà réfléchi à des méthodes plus simples pour extraire des données depuis le jeu sans interagir directement avec le trafic.  \\nC’est ainsi qu’est né ce projet : un **outil d’OCR (reconnaissance optique de caractères)** pour **analyser en temps réel** le texte affiché à l’écran dans Dofus.\\n\\n## Objectif\\n\\nL’idée était de **définir une zone de capture sur l’écran**, et d’utiliser un moteur OCR pour lire automatiquement les textes présents dans cette zone, notamment pour :\\n- Lire des messages dans le chat\\n- Extraire les informations des inventaires ou d’interface\\n- Capturer des données sans manipulation réseau\\n\\n## Réalisation technique\\n\\nLe projet repose sur :\\n- **Tesseract OCR** pour la reconnaissance de texte\\n- Une interface légère en **NeutralinoJS** (alternative à Electron, plus légère) pour définir dynamiquement la **zone de capture**\\n- Un système de **capture d’écran à la volée**, couplé à un traitement OCR déclenché par raccourci\\n\\n## Utilisation et limites\\n\\nCe projet m’a permis de valider la **faisabilité de l’OCR sur jeu en direct**, même si les limites en termes de performance et de fiabilité de la reconnaissance ont freiné une adoption plus poussée. Il a toutefois posé les bases du **projet réseau** qui a suivi.\\n\\n## Stack utilisée\\n\\n- **NeutralinoJS** pour l’interface\\n- **Tesseract OCR**\\n- Capture d’écran automatique sous Windows\",\"en\":\"# OCR Dofus – Real-time Screen Text Reader for the Game Dofus\\n\\n## Context\\n\\nBefore creating my network packet parser for Dofus, I had already explored alternative ways to extract information from the game without diving into network-level operations.  \\nThis led to the creation of a tool based on **OCR (Optical Character Recognition)** to **read game data directly from the screen in real time**.\\n\\n## Goal\\n\\nThe core idea was to allow users to **define a screen capture zone**, and automatically extract visible text using OCR. This was especially useful to:\\n- Read in-game chat messages\\n- Extract inventory or UI information\\n- Capture useful data without packet interception\\n\\n## Technical Implementation\\n\\nThe project included:\\n- **Tesseract OCR** for text recognition\\n- A lightweight GUI built with **NeutralinoJS** (Electron alternative)\\n- A screen capture system with hotkey-based OCR processing\\n\\n## Usage & Limitations\\n\\nThis tool demonstrated that **live OCR on a game screen was feasible**, though limited by recognition accuracy and screen resolution. Still, it served as a **technical precursor** to the more advanced network analysis project that followed.\\n\\n## Tech Stack\\n\\n- **NeutralinoJS** for the frontend\\n- **Tesseract OCR**\\n- Windows screen capturing\"}",
        "startDate": "2022-01-01",
        "endDate": "2022-01-01",
        "technologies": ["JavaScript", "NeutralinoJS", "Tesseract"],
        "tags": ["JavaScript", "NeutralinoJS", "Tesseract"],
        "category": "Import React",
        "thumbnailUrl": "projects/OCR_app/1.png",
        "gallery": ["projects/OCR_app/1.png", "projects/OCR_app/2.png"],
        "gitUrl": null,
        "liveUrl": null,
        "role": "Développeur",
        "active": true,
        "old": false,
        "longDescription": "{\"fr\":\"Avec NeutralinoJS et Tesseract OCR, j’ai conçu OCR Dofus, un outil léger de capture d’écran dynamique pour extraire en temps réel chats, inventaires et infos d’interface via un simple raccourci clavier.\",\"en\":\"Using NeutralinoJS and Tesseract OCR, I built OCR Dofus, a lightweight real-time screenshot tool to extract chat, inventory, and interface data on the fly with a single keyboard shortcut.\"}"
    },
    {
        "title": "{\"fr\":\"Navigateur web simplifié\",\"en\":\"Navigateur web simplifié\"}",
        "description": "{\"fr\":\"Navigateur web simplifié\",\"en\":\" Navigateur web simplifié\"}",
        "content": "{\"fr\":\"# Navigateur simplifié Dofus – Accès rapide aux guides de quêtes\\n\\n## Contexte\\n\\nDans Dofus, la progression repose en grande partie sur la complétion de quêtes parfois complexes. Comme beaucoup de joueurs, je m’appuie sur le site **Dofus pour les Noobs**, une référence pour suivre étape par étape les objectifs à accomplir.\\n\\nMais devoir **changer constamment de fenêtre** entre le jeu et un navigateur classique nuisait à l’expérience de jeu. J’ai donc décidé de développer un **navigateur ultra-léger et intégré**, conçu pour les besoins spécifiques des joueurs.\\n\\n## Objectif\\n\\nCréer une application dédiée permettant de :\\n- **Afficher uniquement les informations utiles** issues du site (titres, étapes de quête, dialogues)\\n- **Rester toujours au premier plan** de manière non intrusive pendant le jeu\\n- **Naviguer rapidement** entre les sections grâce à une interface dédiée\\n\\n## Réalisation technique\\n\\nLe projet repose sur :\\n- **NeutralinoJS** pour la couche applicative légère\\n- **ReactJS** pour construire une interface fluide et évolutive\\n- **JavaScript natif** pour parser les contenus HTML du site cible\\n\\n## Évolutions du projet\\n\\nAu fil du temps et selon les retours des utilisateurs, l’application a été enrichie :\\n- **Ajout d’un thème sombre** pour le confort visuel\\n- Intégration de **nouvelles sources** et d’outils annexes liés à Dofus\\n- Amélioration de la navigation et des raccourcis\\n\\n## Résultat\\n\\nCette application m’a permis de **gagner du temps pendant mes sessions de jeu**, tout en explorant la conception de logiciels “utilitaires gamers” sur mesure. Elle combine **légèreté, performance, ergonomie et scalabilité**, tout en restant respectueuse du jeu.\",\"en\":\"# Simplified Dofus Browser – Fast Access to Quest Guides\\n\\n## Context\\n\\nIn Dofus, character progression often depends on completing detailed quests. Like many players, I frequently consult the well-known guide website **“Dofus pour les Noobs”**.\\n\\nHowever, **constantly switching** between the game and a standard browser quickly became disruptive. To solve this, I developed a **lightweight, always-on-top application** focused on player needs.\\n\\n## Goal\\n\\nThe tool was designed to:\\n- **Display only relevant quest information** (steps, objectives, dialogues)\\n- Stay **always on top** without affecting gameplay\\n- Offer **fast navigation controls** through a dedicated UI\\n\\n## Technical Implementation\\n\\n- **NeutralinoJS** for a lightweight desktop shell\\n- **ReactJS** for a flexible, interactive frontend\\n- **Vanilla JavaScript** for DOM parsing and content extraction\\n\\n## Project Evolution\\n\\nAs users started using the tool, I iteratively added:\\n- A **dark mode** for better readability\\n- Support for **additional tools and content** beyond the original scope\\n- UI improvements and keyboard shortcuts for smoother use\\n\\n## Outcome\\n\\nThe project significantly **improved gameplay comfort** by streamlining access to quest guides. It also served as a playground for building **gamer-friendly productivity tools** with a focus on **performance, modularity, and clean UI**.\"}",
        "startDate": "2022-05-13",
        "endDate": "2022-05-13",
        "technologies": ["JavaScript", "NeutralinoJS"],
        "tags": ["JavaScript", "NeutralinoJS"],
        "category": "Import React",
        "thumbnailUrl": "projects/mini/2.png",
        "gallery": ["projects/mini/1.png", "projects/mini/2.png"],
        "gitUrl": null,
        "liveUrl": null,
        "role": "Développeur",
        "active": true,
        "old": false,
        "longDescription": "{\"fr\":\"Pour Dofus, j’ai créé un navigateur léger avec NeutralinoJS et ReactJS, affichant les guides de quêtes filtrés, toujours au premier plan, avec thème sombre, parsing HTML dynamique et navigation rapide pour une expérience de jeu optimisée.\",\"en\":\"For Dofus, I built a lightweight browser with NeutralinoJS and ReactJS, filtering quest guides, staying on top, with dark mode, dynamic HTML parsing and fast navigation to streamline in-game reference access.\"}"
    },
    {
        "title": "{\"fr\":\"Lecteur multimédia wpf\",\"en\":\"Lecteur multimédia wpf\"}",
        "description": "{\"fr\":\"Lecteur multimédia wpf\",\"en\":\" Lecteur multimédia wpf\"}",
        "content": "{\"fr\":\"# Lecteur multimédia WPF – Projet personnel de lecteur audio/vidéo\\n\\n## Contexte\\n\\nPendant ma formation en DUT, j’ai profité de mon temps libre pour expérimenter divers projets personnels.  \\nParmi eux, j’ai développé mon **propre lecteur multimédia**, capable de lire des fichiers **MP3** et **vidéo**, en utilisant **C#** et **WPF** (Windows Presentation Foundation).\\n\\n## Objectifs du projet\\n\\n- Créer une **interface utilisateur ergonomique** pour contrôler la lecture (lecture/pause, volume, piste suivante…)\\n- Gérer différents formats multimédias audio et vidéo\\n- Intégrer une **playlist** et une gestion simple des fichiers\\n- Apprendre à manipuler les API multimédia en .NET\\n\\n## Réalisation technique\\n\\nLe projet était basé sur :\\n- **WPF** pour une interface fluide et personnalisée\\n- Les bibliothèques .NET de lecture média (avec `MediaElement`)\\n- C# pour la logique d’interaction et le traitement des fichiers\\n\\n## Intérêt pédagogique\\n\\nCe projet m’a permis de :\\n- Renforcer mes compétences en **développement desktop sous Windows**\\n- Découvrir la **programmation événementielle** autour des médias\\n- Approfondir la structuration d’une **application WPF complète**\\n\\n## Résultat\\n\\nUn petit outil fonctionnel, simple mais efficace, qui m’a servi de base pour explorer plus en profondeur le développement .NET orienté UI.\",\"en\":\"# WPF Media Player – Personal Audio/Video Player Project\\n\\n## Context\\n\\nDuring my DUT studies, I worked on several side projects in my spare time.  \\nOne of them was a **custom media player** built with **C#** and **WPF**, capable of playing both **MP3s** and **video files**.\\n\\n## Project Goals\\n\\n- Build a **user-friendly interface** to control playback (play/pause, volume, track navigation…)\\n- Support common audio and video formats\\n- Add **playlist support** and basic file management\\n- Learn how to use multimedia APIs in .NET\\n\\n## Technical Implementation\\n\\n- **WPF** for a responsive and customizable UI\\n- Native .NET components like `MediaElement` for playback\\n- C# for logic and file handling\\n\\n## Learning Outcomes\\n\\nThis project helped me:\\n- Strengthen my skills in **Windows desktop development**\\n- Learn **event-driven programming** in a multimedia context\\n- Build a fully functional **WPF application** from scratch\\n\\n## Outcome\\n\\nA small yet functional tool that served as a solid foundation for deeper exploration of .NET and UI development.\"}",
        "startDate": "2015-01-01",
        "endDate": "2015-12-31",
        "technologies": ["WPF", "CSharp"],
        "tags": ["WPF", "CSharp"],
        "category": "Import React",
        "thumbnailUrl": "projects/PFAudio.png",
        "gallery": ["projects/PFAudio.png"],
        "gitUrl": null,
        "liveUrl": null,
        "role": "Développeur",
        "active": true,
        "old": false,
        "longDescription": "{\"fr\":\"Pendant mon DUT, j’ai développé un lecteur multimédia WPF en C#: interface ergonomique avec MediaElement, lecture MP3/vidéo, playlist et contrôle (lecture, pause, volume), explorant la programmation événementielle et le développement .NET desktop.\",\"en\":\"During my DUT, I built a WPF media player in C#: ergonomic UI with MediaElement, MP3/video playback, playlist and controls (play, pause, volume), exploring event-driven programming and .NET desktop development.\"}"
    },
    {
        "title": "{\"fr\":\"WakeOnLan PHP\",\"en\":\"WakeOnLan PHP\"}",
        "description": "{\"fr\":\"Mix site web php et shell pour pouvoir utiliser du WOL pour pouvoir allumer un serveur depuis un site web\",\"en\":\"WakeOnLan PHP\"}",
        "content": "{\"fr\":\"# Wake-on-LAN via site web – Interface PHP + Script Shell\\n\\n## Contexte\\n\\nLors de mes années de lycée, j’ai collaboré avec un camarade sur un projet visant à **allumer un serveur à distance** via une interface web.  \\nL’idée était de rendre plus accessible l’utilisation du **Wake-on-LAN (WOL)** depuis n’importe quel appareil, via un simple navigateur.\\n\\n## Objectif\\n\\n- Pouvoir démarrer un **serveur local éteint** depuis une page web\\n- Utiliser une **interface PHP simple** côté client\\n- Exécuter un **script Shell** sur le serveur hébergeant le site pour envoyer le paquet magique WOL\\n\\n## Réalisation technique\\n\\n- Page web en **PHP** servant d’interface de déclenchement\\n- Script **Shell (bash)** exécuté avec les droits nécessaires (via `sudo`)\\n- Utilisation de la commande `etherwake` ou `wakeonlan` pour envoyer le **magic packet**\\n- Configuration du BIOS et de la carte réseau pour activer le support WOL\\n\\n## Enjeux et apprentissages\\n\\nCe projet m’a permis :\\n- De mieux comprendre la **communication bas niveau** sur un réseau local\\n- De sécuriser l’exécution de commandes shell depuis PHP\\n- De me confronter aux **contraintes d’administration système** (droits, services, sécurité)\\n\\n## Résultat\\n\\nUn petit projet concret et fonctionnel, très formateur pour aborder des notions de **réseau, scripting, sécurité et automatisation** dès le lycée.\",\"en\":\"# Wake-on-LAN from Web Interface – PHP + Shell Script\\n\\n## Context\\n\\nWhile in high school, I worked with a classmate on a project that allowed us to **remotely power on a local server** from a web interface.  \\nThe goal was to make **Wake-on-LAN (WOL)** accessible from any device using just a browser.\\n\\n## Goal\\n\\n- Start a **local powered-off server** via a web page\\n- Use a **simple PHP interface** to trigger the request\\n- Execute a **Shell script** server-side to send the WOL magic packet\\n\\n## Technical Implementation\\n\\n- A lightweight **PHP frontend** for the web interface\\n- A **bash script** triggered by PHP (with `sudo` rights)\\n- WOL packet sent using `etherwake` or `wakeonlan`\\n- BIOS and network card configured to allow WOL\\n\\n## Challenges and Learning\\n\\nThrough this project, I learned:\\n- The basics of **low-level LAN communication**\\n- How to execute **secure shell commands** from a web environment\\n- System administration basics (permissions, networking tools, etc.)\\n\\n## Outcome\\n\\nA small but functional and educational project, which introduced me early on to topics like **networking, scripting, security, and automation**.\"}",
        "startDate": "2011-01-01",
        "endDate": "2011-12-31",
        "technologies": ["PHP", "Bash"],
        "tags": ["PHP", "Bash"],
        "category": "Import React",
        "thumbnailUrl": "projects/image_not_available.png",
        "gallery": ["projects/image_not_available.png"],
        "gitUrl": null,
        "liveUrl": null,
        "role": "Développeur",
        "active": true,
        "old": true,
        "longDescription": "{\"fr\":\"Pour un projet de lycée, j’ai développé une interface PHP et un script Shell (bash + etherwake) pour envoyer un magic packet WOL via navigateur et démarrer un serveur à distance de façon sécurisée.\",\"en\":\"In high school, I built a PHP web interface and a bash script (using etherwake) to send WOL magic packets from a browser, securely powering on a remote server\"}"
    },
    {
        "title": "{\"fr\":\"Fnac PHP\",\"en\":\"Fnac PHP\"}",
        "description": "{\"fr\":\"Fnac PHP\",\"en\":\" Fnac PHP\"}",
        "content": "{\"fr\":\"# Fnac – Site e-commerce en PHP MVC (projet DUT)\\n\\n## Contexte\\n\\nProjet réalisé en groupe dans le cadre de mon **DUT Informatique**, le but était de **reproduire un site e-commerce inspiré de la Fnac**, en partant de zéro, sans framework, avec une architecture **MVC maison**.  \\nChaque membre du groupe avait un rôle spécifique, et nous avons travaillé en méthode agile avec répartition des tâches.\\n\\n## Objectifs\\n\\n- Concevoir un **site de vente en ligne** fonctionnel\\n- Implémenter une **architecture MVC** en PHP sans framework\\n- Créer une base de données relationnelle pour les produits, les utilisateurs et les commandes\\n- Assurer une **navigation fluide** entre les pages (produits, panier, commande, etc.)\\n\\n## Réalisation technique\\n\\n- **PHP natif** structuré en MVC (Modèle-Vue-Contrôleur)\\n- **MySQL** pour la base de données\\n- Front-end en **HTML/CSS** avec un soupçon de **JavaScript**\\n- Système de **panier**, de **gestion des utilisateurs** et de **validation de commandes**\\n\\n## Enjeux et apprentissages\\n\\nCe projet nous a permis :\\n- De bien comprendre les fondements du **MVC**\\n- De travailler en équipe sur un **projet complet de A à Z**\\n- De mettre en place un **système de routing** maison\\n- D’écrire un code **séparé et réutilisable**\\n\\n## Résultat\\n\\nUn site e-commerce complet, simple mais fonctionnel, 100% fait main, qui nous a permis de **maîtriser PHP sans dépendre de frameworks**.  \\nUn très bon exercice de structuration de code et de **collaboration en équipe**.\",\"en\":\"# Fnac – PHP MVC E-commerce Site (DUT Group Project)\\n\\n## Context\\n\\nThis group project was carried out during my **Computer Science DUT**, with the goal of recreating an **e-commerce website inspired by Fnac**, built entirely **from scratch** using **custom MVC architecture** in plain PHP.  \\nEach team member had a dedicated role, and we used an agile-like approach to manage task distribution.\\n\\n## Goals\\n\\n- Develop a fully functional **online store**\\n- Implement a **homemade MVC structure** in raw PHP\\n- Create a relational database for products, users, and orders\\n- Ensure smooth navigation between pages (product listings, cart, checkout, etc.)\\n\\n## Technical Implementation\\n\\n- **Vanilla PHP**, organized in **MVC**\\n- **MySQL** for data storage\\n- Front-end in **HTML/CSS** with some **JavaScript**\\n- Features: **shopping cart**, **user management**, and **order processing**\\n\\n## Challenges and Learnings\\n\\nThis project allowed us to:\\n- Gain a solid understanding of **MVC principles**\\n- Collaborate effectively on a **full-stack project**\\n- Implement a **custom routing system**\\n- Structure clean, modular, and reusable code\\n\\n## Outcome\\n\\nA complete and functional e-commerce website, fully hand-coded, that helped us **master core PHP development** without relying on external frameworks.  \\nA great experience in both **code architecture** and **teamwork**.\"}",
        "startDate": "2015-01-01",
        "endDate": "2015-12-31",
        "technologies": ["PHP"],
        "tags": ["PHP"],
        "category": "Import React",
        "thumbnailUrl": "projects/image_not_available.png",
        "gallery": ["projects/image_not_available.png"],
        "gitUrl": null,
        "liveUrl": null,
        "role": "Développeur",
        "active": true,
        "old": true,
        "longDescription": "{\"fr\":\"Pour mon DUT, j’ai réalisé un site e-commerce inspiré de la Fnac en PHP MVC maison : MySQL, routing personnalisé, gestion produits, panier, utilisateurs et commandes, avec un frontend HTML/CSS/JS.\",\"en\":\"For my DUT, I built a Fnac-inspired e-commerce site from scratch in native PHP MVC: MySQL backend, custom routing, product, cart, user and order management, with an HTML/CSS/JS frontend.\"}"
    },
    {
        "title": "{\"fr\":\"Bloc notes C++\",\"en\":\"Bloc notes C++\"}",
        "description": "{\"fr\":\"Bloc notes C++ \",\"en\":\" Bloc notes C++\"}",
        "content": "{\"fr\":\"# Bloc-notes C++ avec Qt – Mon premier logiciel (collège)\\n\\n## Contexte\\n\\nCe projet marque le tout début de mon aventure dans le développement logiciel.  \\nAlors que j’étais en classe de **4e**, j’ai décidé de me lancer dans la création de mon propre **éditeur de texte**, à la manière du bloc-notes Windows.  \\nPour cela, j’ai utilisé **C++** avec le framework **Qt**, que je découvrais à l’époque.\\n\\n## Objectifs\\n\\n- Créer une interface graphique simple pour écrire, enregistrer et ouvrir des fichiers `.txt`\\n- Découvrir la structure d’un projet logiciel\\n- Apprendre les bases de la **programmation orientée objet**\\n- Comprendre les **événements GUI** (clics, raccourcis, menus)\\n\\n## Réalisation technique\\n\\n- Utilisation de **Qt Designer** pour créer l’interface\\n- C++ pour gérer les interactions et la logique (fichier, menu, raccourcis)\\n- Prise en charge des actions classiques : **Nouveau**, **Ouvrir**, **Enregistrer**, **Quitter**\\n- Gestion minimale des erreurs\\n\\n## Intérêt pédagogique\\n\\nCe premier projet m’a permis :\\n- D’appréhender **le cycle complet d’un projet logiciel**\\n- D’écrire mes premières **fonctions structurées**\\n- De découvrir la **programmation d’interface utilisateur**\\n- De développer ma curiosité technique dès le plus jeune âge\\n\\n## Résultat\\n\\nUn petit bloc-notes fonctionnel, stable et sobre, qui représente pour moi **le point de départ de ma passion pour la programmation**.\",\"en\":\"# C++ Notepad with Qt – My First Software Project (Middle School)\\n\\n## Context\\n\\nThis project marked the very beginning of my journey into software development.  \\nBack in **8th grade**, I decided to create a simple **text editor**, inspired by Windows Notepad.  \\nI used **C++** with the **Qt framework**, which I was just discovering at the time.\\n\\n## Goals\\n\\n- Build a basic GUI to write, open, and save `.txt` files\\n- Learn how a software project is structured\\n- Get familiar with **object-oriented programming**\\n- Understand **GUI events** (clicks, menus, shortcuts)\\n\\n## Technical Implementation\\n\\n- **Qt Designer** for UI creation\\n- **C++** for the logic: file handling, buttons, menu actions\\n- Support for basic actions: **New**, **Open**, **Save**, **Exit**\\n- Basic error handling and file I/O\\n\\n## Educational Value\\n\\nThis project helped me:\\n- Understand the **full software development cycle**\\n- Write my first structured **functions and classes**\\n- Explore **user interface programming**\\n- Spark my long-term interest in development\\n\\n## Outcome\\n\\nA small but functional notepad-style editor, representing **the true start of my passion for coding**.\"}",
        "startDate": "2008-01-01",
        "endDate": "2008-12-31",
        "technologies": ["C++", "Qt"],
        "tags": ["C++", "Qt"],
        "category": "Import React",
        "thumbnailUrl": "projects/image_not_available.png",
        "gallery": ["projects/image_not_available.png"],
        "gitUrl": null,
        "liveUrl": null,
        "role": "Développeur",
        "active": true,
        "old": true,
        "longDescription": "{\"fr\":\"En 4ᵉ, j’ai créé un bloc-notes en C++ avec Qt : interface conçue via Qt Designer, menus et raccourcis pour ouvrir, éditer et enregistrer des fichiers .txt, découvrant la POO et la gestion d’événements GUI.\",\"en\":\"In 8th grade, I built a Notepad in C++ with Qt: designed the UI in Qt Designer, added menus and shortcuts to open, edit, and save .txt files, learning OOP and GUI event handling.\"}"
    },
    {
        "title": "{\"fr\":\"Logiciel de chat en réseau winform\",\"en\":\"Logiciel de chat en réseau winform\"}",
        "description": "{\"fr\":\"Logiciel de chat en réseau winform\",\"en\":\" Logiciel de chat en réseau winform\"}",
        "content": "{\"fr\":\"# Logiciel de chat réseau – Projet WinForms avec sockets TCP/UDP\\n\\n## Contexte\\n\\nToujours dans une démarche d’apprentissage personnel pendant mon DUT, j’ai réalisé un petit **logiciel de messagerie en réseau**.  \\nL’objectif principal était de **comprendre et manipuler les sockets** en **TCP et UDP**, tout en créant une interface fonctionnelle via **WinForms**.\\n\\n## Objectifs\\n\\n- Apprendre à utiliser les **sockets en C#** pour la communication client-serveur\\n- Mettre en place un système de **chat local en réseau**\\n- Différencier les usages du **protocole TCP (fiable)** et de **UDP (rapide, sans garantie)**\\n- Créer une **interface simple** permettant d’échanger des messages en direct\\n\\n## Réalisation technique\\n\\n- **WinForms** pour l’interface graphique\\n- **Sockets TCP** pour les messages privés et fiables\\n- **Sockets UDP** pour les messages broadcast sur le réseau local\\n- Multithreading pour la gestion des connexions simultanées\\n\\n## Enjeux techniques\\n\\nLe projet m’a permis de découvrir :\\n- La gestion des flux réseau et la **sérialisation de messages**\\n- Le **multithreading** pour écouter et envoyer en parallèle\\n- Les bonnes pratiques de synchronisation UI/réseau\\n\\n## Résultat\\n\\nUne application de chat réseau simple, efficace, avec gestion basique des utilisateurs et des canaux de discussion, me servant d’introduction aux concepts de **communication réseau** en C#.\",\"en\":\"# Logiciel de chat réseau – Projet WinForms avec sockets TCP/UDP\\n\\n## Contexte\\n\\nToujours dans une démarche d’apprentissage personnel pendant mon DUT, j’ai réalisé un petit **logiciel de messagerie en réseau**.  \\nL’objectif principal était de **comprendre et manipuler les sockets** en **TCP et UDP**, tout en créant une interface fonctionnelle via **WinForms**.\\n\\n## Objectifs\\n\\n- Apprendre à utiliser les **sockets en C#** pour la communication client-serveur\\n- Mettre en place un système de **chat local en réseau**\\n- Différencier les usages du **protocole TCP (fiable)** et de **UDP (rapide, sans garantie)**\\n- Créer une **interface simple** permettant d’échanger des messages en direct\\n\\n## Réalisation technique\\n\\n- **WinForms** pour l’interface graphique\\n- **Sockets TCP** pour les messages privés et fiables\\n- **Sockets UDP** pour les messages broadcast sur le réseau local\\n- Multithreading pour la gestion des connexions simultanées\\n\\n## Enjeux techniques\\n\\nLe projet m’a permis de découvrir :\\n- La gestion des flux réseau et la **sérialisation de messages**\\n- Le **multithreading** pour écouter et envoyer en parallèle\\n- Les bonnes pratiques de synchronisation UI/réseau\\n\\n## Résultat\\n\\n# Network Chat Software – WinForms Project Using TCP/UDP Sockets\\n\\n## Context\\n\\nAs part of my personal learning efforts during my DUT studies, I developed a small **network chat application**.  \\nThe main objective was to **learn and practice TCP and UDP socket communication** in C#, while building a simple messaging interface using **WinForms**.\\n\\n## Goals\\n\\n- Understand how to use **TCP and UDP sockets** in C#\\n- Create a basic **local network chat system**\\n- Explore the differences between **reliable TCP** and **fast, connectionless UDP**\\n- Build a **simple GUI** for real-time message exchange\\n\\n## Technical Implementation\\n\\n- **WinForms** for the graphical interface\\n- **TCP sockets** for reliable private messaging\\n- **UDP sockets** for fast broadcast messages on LAN\\n- **Multithreading** to manage incoming/outgoing connections\\n\\n## Technical Challenges\\n\\nThis project taught me:\\n- How to handle **network streams** and message serialization\\n- Managing **multithreaded communication**\\n- Syncing network logic with UI elements\\n\\n## Outcome\\n\\nA lightweight but functional chat app for LAN communication, which provided me with a solid foundation in **network programming** and **socket handling** in C#.\"}",
        "startDate": "2014-12-21",
        "endDate": "2015-01-01",
        "technologies": ["WinForm", "CSharp"],
        "tags": ["WinForm", "CSharp"],
        "category": "Import React",
        "thumbnailUrl": "projects/image_not_available.png",
        "gallery": ["projects/image_not_available.png"],
        "gitUrl": null,
        "liveUrl": null,
        "role": "Développeur",
        "active": false,
        "old": true,
        "longDescription": "{\"fr\":\"Pour approfondir les sockets C#, j’ai développé un chat réseau WinForms combinant TCP pour les messages privés fiables et UDP pour le broadcast, avec une interface multithreadée offrant des échanges instantanés sur le LAN.\",\"en\":\"To master C# sockets, I built a WinForms network chat using TCP for reliable private messaging and UDP for broadcasting, featuring a multithreaded UI for instant LAN communication.\"}"
    },
    {
        "title": "{\"fr\":\"GSI Automeca\",\"en\":\"GSI Automeca\"}",
        "description": "{\"fr\":\"Déploiement d’un site et ERP Odoo (2023–présent) avec configuration CRM, campagnes Brevo, et infrastructure complète sur VPS via Docker, Nginx, SSL, et gestion mail.\",\"en\":\"Deployment of an Odoo ERP and website (2023–present) with CRM setup, Brevo marketing campaigns, and full VPS infrastructure using Docker, Nginx, SSL, and mail management.\\n\\n\"}",
        "content": "{\"fr\":\"# GSIO Automeca – Déploiement ERP Odoo et infrastructure complète (2023–aujourd’hui)\\n\\n## Contexte\\n\\nDans le cadre d’une mission longue durée débutée en 2023, j’ai pris en charge l’intégralité du **déploiement technique et fonctionnel d’Odoo** pour l’entreprise GSIO Automeca.  \\nCe projet visait à doter l’entreprise d’un **ERP performant**, capable de gérer à la fois son site web, sa relation client, et sa communication marketing.\\n\\n## Objectifs\\n\\n- Mettre en place une instance Odoo personnalisée pour le **site vitrine** et la **gestion des clients**\\n- Configurer le module **CRM** afin de suivre les visites du site et centraliser les prospects\\n- Implémenter un système de **campagnes marketing via Brevo (ex-Sendinblue)**\\n- Déployer une **infrastructure serveur sécurisée et stable**, incluant l’hébergement, les noms de domaine, et les services de mail\\n\\n## Réalisation technique\\n\\n- **Déploiement d’Odoo** sur un **VPS OVH**, avec gestion via **Docker**\\n- Configuration d’un **reverse proxy Nginx** et génération des **certificats SSL** via Let’s Encrypt\\n- Gestion complète du **nom de domaine** et de la **zone DNS**\\n- Mise en place des **boîtes mail entrantes et sortantes**, avec SPF/DKIM pour la délivrabilité\\n- Intégration de **Brevo** pour la gestion des newsletters et campagnes clients\\n- Surveillance, maintenance et mises à jour régulières de l’environnement\\n\\n## Enjeux et compétences mobilisées\\n\\nCe projet m’a permis d’approfondir :\\n- Mes compétences en **DevOps** et **administration système**\\n- L’intégration fonctionnelle avancée d’**Odoo** (web, CRM, marketing)\\n- La sécurisation et l’optimisation d’une **infrastructure de production** complète\\n- Une gestion de projet **autonome**, de l’analyse des besoins au déploiement en production\\n\\n## Résultat\\n\\nUn environnement complet, fiable et professionnel, aujourd’hui utilisé quotidiennement par l’entreprise pour piloter son activité, ses contacts, et sa stratégie marketing.\\n\",\"en\":\"# GSIO Automeca – Odoo ERP Deployment & Full Infrastructure (2023–present)\\n\\n## Context\\n\\nSince 2023, I have been leading the full **technical and functional deployment of Odoo** for the company GSIO Automeca.  \\nThe goal was to provide a robust ERP to manage the company’s **website, customer relations**, and **marketing operations**.\\n\\n## Goals\\n\\n- Set up a customized Odoo instance for the **public website** and **client management**\\n- Configure the **CRM module** to track website visits and centralize contact leads\\n- Implement **Brevo** (formerly Sendinblue) for **marketing campaign automation**\\n- Deploy a **secure, stable server infrastructure** including hosting, domain, and mail handling\\n\\n## Technical Implementation\\n\\n- **Odoo deployment** on an **OVH VPS**, using **Docker** containers\\n- Configuration of **Nginx as reverse proxy** with **SSL certificates** via Let’s Encrypt\\n- Full **DNS zone and domain name management**\\n- Setup of **incoming/outgoing mailboxes** with SPF and DKIM for email deliverability\\n- Integration of **Brevo** for newsletter and customer campaign management\\n- Ongoing **maintenance, updates, and monitoring** of the server environment\\n\\n## Challenges and Skills Involved\\n\\nThis project strengthened my expertise in:\\n- **DevOps** and **system administration**\\n- Advanced **Odoo integration** (website, CRM, marketing modules)\\n- **Securing and optimizing** a live production environment\\n- **Project autonomy**, from requirements analysis to production deployment\\n\\n## Outcome\\n\\nA complete, reliable and professional system now used daily by the company to manage business operations, client relations, and marketing strategy.\\n\"}",
        "startDate": "2023-01-01",
        "endDate": "",
        "technologies": ["Odoo", "Python", "XML", "Docker", "SysAdmin"],
        "tags": ["Odoo", "Python", "XML", "Docker", "SysAdmin"],
        "category": "",
        "thumbnailUrl": "projects/gsi_automeca/1.png",
        "gallery": ["projects/gsi_automeca/1.png", "projects/gsi_automeca/2.png"],
        "gitUrl": "",
        "liveUrl": "",
        "role": "",
        "active": true,
        "old": false,
        "longDescription": "{\"fr\":\"Mise en place d’un ERP Odoo sur VPS avec Docker, incluant CRM, campagnes marketing via Brevo, configuration Nginx avec SSL, gestion de domaine et boîtes mails. Projet complet mêlant développement, DevOps et support client.\",\"en\":\"Deployment of an Odoo ERP on a VPS using Docker, including CRM, marketing campaigns via Brevo, Nginx with SSL, domain and mail setup. A full-stack project involving development, DevOps, system configuration, and client support.\"}"
    }
]
